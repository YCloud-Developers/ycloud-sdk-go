/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageInteractiveActionSection WhatsApp Message Interactive Section Object.
type WhatsappMessageInteractiveActionSection struct {
	// **Required if the message has more than one section.** Title of the section. Maximum length: 24 characters.
	Title *string `json:"title,omitempty"`
	// Contains a list of rows. You can have a total of 10 rows across your sections. Each row must have a title (Maximum length: 24 characters) and an ID (Maximum length: 200 characters). You can add a description (Maximum length: 72 characters), but it is optional.
	Rows []WhatsappMessageInteractiveActionSectionRow `json:"rows,omitempty"`
	// Required for Multi-Product Messages. Array of product objects. There is a minimum of 1 product per section and a maximum of 30 products across all sections.
	ProductItems []WhatsappMessageInteractiveActionSectionProductItem `json:"product_items,omitempty"`
}

// NewWhatsappMessageInteractiveActionSection instantiates a new WhatsappMessageInteractiveActionSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageInteractiveActionSection() *WhatsappMessageInteractiveActionSection {
	this := WhatsappMessageInteractiveActionSection{}
	return &this
}

// NewWhatsappMessageInteractiveActionSectionWithDefaults instantiates a new WhatsappMessageInteractiveActionSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageInteractiveActionSectionWithDefaults() *WhatsappMessageInteractiveActionSection {
	this := WhatsappMessageInteractiveActionSection{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveActionSection) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveActionSection) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveActionSection) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WhatsappMessageInteractiveActionSection) SetTitle(v string) {
	o.Title = &v
}

// GetRows returns the Rows field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveActionSection) GetRows() []WhatsappMessageInteractiveActionSectionRow {
	if o == nil || o.Rows == nil {
		var ret []WhatsappMessageInteractiveActionSectionRow
		return ret
	}
	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveActionSection) GetRowsOk() ([]WhatsappMessageInteractiveActionSectionRow, bool) {
	if o == nil || o.Rows == nil {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveActionSection) HasRows() bool {
	if o != nil && o.Rows != nil {
		return true
	}

	return false
}

// SetRows gets a reference to the given []WhatsappMessageInteractiveActionSectionRow and assigns it to the Rows field.
func (o *WhatsappMessageInteractiveActionSection) SetRows(v []WhatsappMessageInteractiveActionSectionRow) {
	o.Rows = v
}

// GetProductItems returns the ProductItems field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveActionSection) GetProductItems() []WhatsappMessageInteractiveActionSectionProductItem {
	if o == nil || o.ProductItems == nil {
		var ret []WhatsappMessageInteractiveActionSectionProductItem
		return ret
	}
	return o.ProductItems
}

// GetProductItemsOk returns a tuple with the ProductItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveActionSection) GetProductItemsOk() ([]WhatsappMessageInteractiveActionSectionProductItem, bool) {
	if o == nil || o.ProductItems == nil {
		return nil, false
	}
	return o.ProductItems, true
}

// HasProductItems returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveActionSection) HasProductItems() bool {
	if o != nil && o.ProductItems != nil {
		return true
	}

	return false
}

// SetProductItems gets a reference to the given []WhatsappMessageInteractiveActionSectionProductItem and assigns it to the ProductItems field.
func (o *WhatsappMessageInteractiveActionSection) SetProductItems(v []WhatsappMessageInteractiveActionSectionProductItem) {
	o.ProductItems = v
}

func (o WhatsappMessageInteractiveActionSection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Rows != nil {
		toSerialize["rows"] = o.Rows
	}
	if o.ProductItems != nil {
		toSerialize["product_items"] = o.ProductItems
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageInteractiveActionSection struct {
	value *WhatsappMessageInteractiveActionSection
	isSet bool
}

func (v NullableWhatsappMessageInteractiveActionSection) Get() *WhatsappMessageInteractiveActionSection {
	return v.value
}

func (v *NullableWhatsappMessageInteractiveActionSection) Set(val *WhatsappMessageInteractiveActionSection) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageInteractiveActionSection) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageInteractiveActionSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageInteractiveActionSection(val *WhatsappMessageInteractiveActionSection) *NullableWhatsappMessageInteractiveActionSection {
	return &NullableWhatsappMessageInteractiveActionSection{value: val, isSet: true}
}

func (v NullableWhatsappMessageInteractiveActionSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageInteractiveActionSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


