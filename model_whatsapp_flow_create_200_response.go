/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappFlowCreate200Response struct for WhatsappFlowCreate200Response
type WhatsappFlowCreate200Response struct {
	// The ID of the created Flow.
	Id *string `json:"id,omitempty"`
	// Whether the operation was successful.
	Success *bool `json:"success,omitempty"`
}

// NewWhatsappFlowCreate200Response instantiates a new WhatsappFlowCreate200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappFlowCreate200Response() *WhatsappFlowCreate200Response {
	this := WhatsappFlowCreate200Response{}
	return &this
}

// NewWhatsappFlowCreate200ResponseWithDefaults instantiates a new WhatsappFlowCreate200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappFlowCreate200ResponseWithDefaults() *WhatsappFlowCreate200Response {
	this := WhatsappFlowCreate200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsappFlowCreate200Response) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowCreate200Response) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsappFlowCreate200Response) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WhatsappFlowCreate200Response) SetId(v string) {
	o.Id = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *WhatsappFlowCreate200Response) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowCreate200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *WhatsappFlowCreate200Response) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *WhatsappFlowCreate200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o WhatsappFlowCreate200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappFlowCreate200Response struct {
	value *WhatsappFlowCreate200Response
	isSet bool
}

func (v NullableWhatsappFlowCreate200Response) Get() *WhatsappFlowCreate200Response {
	return v.value
}

func (v *NullableWhatsappFlowCreate200Response) Set(val *WhatsappFlowCreate200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappFlowCreate200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappFlowCreate200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappFlowCreate200Response(val *WhatsappFlowCreate200Response) *NullableWhatsappFlowCreate200Response {
	return &NullableWhatsappFlowCreate200Response{value: val, isSet: true}
}

func (v NullableWhatsappFlowCreate200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappFlowCreate200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


