/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappPayment Represents a payment object. Businesses receive updates via webhooks when the status of the user-initiated transaction changes.
type WhatsappPayment struct {
	// WhatsApp Business Account ID.
	WabaId string `json:"wabaId"`
	// Unique identifier for the payment provided by the business. It is case sensitive and cannot be an empty string and can only contain English letters, numbers, underscores, dashes, or dots, and should not exceed 35 characters.
	ReferenceId string                `json:"referenceId"`
	Status      WhatsappPaymentStatus `json:"status"`
	// Contains the latest transaction attempt for this payment.
	Transactions []WhatsappPaymentTransaction `json:"transactions,omitempty"`
}

// NewWhatsappPayment instantiates a new WhatsappPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappPayment(wabaId string, referenceId string, status WhatsappPaymentStatus) *WhatsappPayment {
	this := WhatsappPayment{}
	this.WabaId = wabaId
	this.ReferenceId = referenceId
	this.Status = status
	return &this
}

// NewWhatsappPaymentWithDefaults instantiates a new WhatsappPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappPaymentWithDefaults() *WhatsappPayment {
	this := WhatsappPayment{}
	return &this
}

// GetWabaId returns the WabaId field value
func (o *WhatsappPayment) GetWabaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WabaId
}

// GetWabaIdOk returns a tuple with the WabaId field value
// and a boolean to check if the value has been set.
func (o *WhatsappPayment) GetWabaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WabaId, true
}

// SetWabaId sets field value
func (o *WhatsappPayment) SetWabaId(v string) {
	o.WabaId = v
}

// GetReferenceId returns the ReferenceId field value
func (o *WhatsappPayment) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *WhatsappPayment) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *WhatsappPayment) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetStatus returns the Status field value
func (o *WhatsappPayment) GetStatus() WhatsappPaymentStatus {
	if o == nil {
		var ret WhatsappPaymentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WhatsappPayment) GetStatusOk() (*WhatsappPaymentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WhatsappPayment) SetStatus(v WhatsappPaymentStatus) {
	o.Status = v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *WhatsappPayment) GetTransactions() []WhatsappPaymentTransaction {
	if o == nil || o.Transactions == nil {
		var ret []WhatsappPaymentTransaction
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappPayment) GetTransactionsOk() ([]WhatsappPaymentTransaction, bool) {
	if o == nil || o.Transactions == nil {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *WhatsappPayment) HasTransactions() bool {
	if o != nil && o.Transactions != nil {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []WhatsappPaymentTransaction and assigns it to the Transactions field.
func (o *WhatsappPayment) SetTransactions(v []WhatsappPaymentTransaction) {
	o.Transactions = v
}

func (o WhatsappPayment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["wabaId"] = o.WabaId
	}
	if true {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Transactions != nil {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappPayment struct {
	value *WhatsappPayment
	isSet bool
}

func (v NullableWhatsappPayment) Get() *WhatsappPayment {
	return v.value
}

func (v *NullableWhatsappPayment) Set(val *WhatsappPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPayment(val *WhatsappPayment) *NullableWhatsappPayment {
	return &NullableWhatsappPayment{value: val, isSet: true}
}

func (v NullableWhatsappPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
