/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappPricingCategory WhatsApp pricing category. - `referral_conversion`: Indicates a [free entry point conversation](https://developers.facebook.com/docs/whatsapp/pricing#free-entry-point-conversations). - `authentication`: Indicates the conversation was billed at authentication rate. - `authentication_international`: Indicates the conversation was conversation was billed at the [authentication-international rate](https://developers.facebook.com/docs/whatsapp/pricing/authentication-international-rates). - `marketing`: Indicates the conversation was billed at authentication rate. - `marketing_lite`: Indicates the conversation was billed at marketing-lite rate. - `utility`: Indicates the conversation was billed at utility rate. - `service`: Indicates the conversation was billed at service rate.  See also [Conversation-Based Pricing](https://developers.facebook.com/docs/whatsapp/pricing).
type WhatsappPricingCategory string

// List of WhatsappPricingCategory
const (
	WHATSAPPPRICINGCATEGORY_REFERRAL_CONVERSION WhatsappPricingCategory = "referral_conversion"
	WHATSAPPPRICINGCATEGORY_AUTHENTICATION WhatsappPricingCategory = "authentication"
	WHATSAPPPRICINGCATEGORY_AUTHENTICATION_INTERNATIONAL WhatsappPricingCategory = "authentication_international"
	WHATSAPPPRICINGCATEGORY_MARKETING WhatsappPricingCategory = "marketing"
	WHATSAPPPRICINGCATEGORY_MARKETING_LITE WhatsappPricingCategory = "marketing_lite"
	WHATSAPPPRICINGCATEGORY_UTILITY WhatsappPricingCategory = "utility"
	WHATSAPPPRICINGCATEGORY_SERVICE WhatsappPricingCategory = "service"
)

// All allowed values of WhatsappPricingCategory enum
var AllowedWhatsappPricingCategoryEnumValues = []WhatsappPricingCategory{
	"referral_conversion",
	"authentication",
	"authentication_international",
	"marketing",
	"marketing_lite",
	"utility",
	"service",
}

func (v *WhatsappPricingCategory) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappPricingCategory(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappPricingCategoryFromValue returns a pointer to a valid WhatsappPricingCategory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappPricingCategoryFromValue(v string) (*WhatsappPricingCategory, error) {
	ev := WhatsappPricingCategory(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappPricingCategory: valid values are %v", v, AllowedWhatsappPricingCategoryEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappPricingCategory) IsValid() bool {
	for _, existing := range AllowedWhatsappPricingCategoryEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappPricingCategory value
func (v WhatsappPricingCategory) Ptr() *WhatsappPricingCategory {
	return &v
}

type NullableWhatsappPricingCategory struct {
	value *WhatsappPricingCategory
	isSet bool
}

func (v NullableWhatsappPricingCategory) Get() *WhatsappPricingCategory {
	return v.value
}

func (v *NullableWhatsappPricingCategory) Set(val *WhatsappPricingCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPricingCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPricingCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPricingCategory(val *WhatsappPricingCategory) *NullableWhatsappPricingCategory {
	return &NullableWhatsappPricingCategory{value: val, isSet: true}
}

func (v NullableWhatsappPricingCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPricingCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

