/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageInteractiveActionParametersFlowActionPayload Required if `flow_action` is `navigate`. Should be omitted otherwise.
type WhatsappMessageInteractiveActionParametersFlowActionPayload struct {
	// The ID of the screen displayed first. It needs to be an **entry** screen.
	Screen *string `json:"screen,omitempty"`
	// Optional input data for the first screen of the Flow. If provided, this must be a non-empty object.
	Data map[string]map[string]interface{} `json:"data,omitempty"`
}

// NewWhatsappMessageInteractiveActionParametersFlowActionPayload instantiates a new WhatsappMessageInteractiveActionParametersFlowActionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageInteractiveActionParametersFlowActionPayload() *WhatsappMessageInteractiveActionParametersFlowActionPayload {
	this := WhatsappMessageInteractiveActionParametersFlowActionPayload{}
	return &this
}

// NewWhatsappMessageInteractiveActionParametersFlowActionPayloadWithDefaults instantiates a new WhatsappMessageInteractiveActionParametersFlowActionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageInteractiveActionParametersFlowActionPayloadWithDefaults() *WhatsappMessageInteractiveActionParametersFlowActionPayload {
	this := WhatsappMessageInteractiveActionParametersFlowActionPayload{}
	return &this
}

// GetScreen returns the Screen field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) GetScreen() string {
	if o == nil || o.Screen == nil {
		var ret string
		return ret
	}
	return *o.Screen
}

// GetScreenOk returns a tuple with the Screen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) GetScreenOk() (*string, bool) {
	if o == nil || o.Screen == nil {
		return nil, false
	}
	return o.Screen, true
}

// HasScreen returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) HasScreen() bool {
	if o != nil && o.Screen != nil {
		return true
	}

	return false
}

// SetScreen gets a reference to the given string and assigns it to the Screen field.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) SetScreen(v string) {
	o.Screen = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) GetData() map[string]map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]map[string]interface{} and assigns it to the Data field.
func (o *WhatsappMessageInteractiveActionParametersFlowActionPayload) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

func (o WhatsappMessageInteractiveActionParametersFlowActionPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Screen != nil {
		toSerialize["screen"] = o.Screen
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageInteractiveActionParametersFlowActionPayload struct {
	value *WhatsappMessageInteractiveActionParametersFlowActionPayload
	isSet bool
}

func (v NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) Get() *WhatsappMessageInteractiveActionParametersFlowActionPayload {
	return v.value
}

func (v *NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) Set(val *WhatsappMessageInteractiveActionParametersFlowActionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageInteractiveActionParametersFlowActionPayload(val *WhatsappMessageInteractiveActionParametersFlowActionPayload) *NullableWhatsappMessageInteractiveActionParametersFlowActionPayload {
	return &NullableWhatsappMessageInteractiveActionParametersFlowActionPayload{value: val, isSet: true}
}

func (v NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageInteractiveActionParametersFlowActionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


