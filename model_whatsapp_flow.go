/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappFlow Represents a WhatsApp Flow.
type WhatsappFlow struct {
	// Flow ID.
	Id *string `json:"id,omitempty"`
	// Flow name.
	Name *string `json:"name,omitempty"`
	Status *WhatsappFlowStatus `json:"status,omitempty"`
	// Flow categories.
	Categories []WhatsappFlowCategory `json:"categories,omitempty"`
	WhatsappBusinessAccount *WhatsappFlowWhatsappBusinessAccount `json:"whatsappBusinessAccount,omitempty"`
	// List of validation errors.
	ValidationErrors []WhatsappFlowValidationError `json:"validationErrors,omitempty"`
	// Version of the Flow JSON structure.
	JsonVersion *string `json:"jsonVersion,omitempty"`
	// Version of the Data API.
	DataApiVersion *string `json:"dataApiVersion,omitempty"`
}

// NewWhatsappFlow instantiates a new WhatsappFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappFlow() *WhatsappFlow {
	this := WhatsappFlow{}
	return &this
}

// NewWhatsappFlowWithDefaults instantiates a new WhatsappFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappFlowWithDefaults() *WhatsappFlow {
	this := WhatsappFlow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsappFlow) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsappFlow) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WhatsappFlow) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhatsappFlow) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhatsappFlow) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WhatsappFlow) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WhatsappFlow) GetStatus() WhatsappFlowStatus {
	if o == nil || o.Status == nil {
		var ret WhatsappFlowStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetStatusOk() (*WhatsappFlowStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WhatsappFlow) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WhatsappFlowStatus and assigns it to the Status field.
func (o *WhatsappFlow) SetStatus(v WhatsappFlowStatus) {
	o.Status = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *WhatsappFlow) GetCategories() []WhatsappFlowCategory {
	if o == nil || o.Categories == nil {
		var ret []WhatsappFlowCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetCategoriesOk() ([]WhatsappFlowCategory, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *WhatsappFlow) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []WhatsappFlowCategory and assigns it to the Categories field.
func (o *WhatsappFlow) SetCategories(v []WhatsappFlowCategory) {
	o.Categories = v
}

// GetWhatsappBusinessAccount returns the WhatsappBusinessAccount field value if set, zero value otherwise.
func (o *WhatsappFlow) GetWhatsappBusinessAccount() WhatsappFlowWhatsappBusinessAccount {
	if o == nil || o.WhatsappBusinessAccount == nil {
		var ret WhatsappFlowWhatsappBusinessAccount
		return ret
	}
	return *o.WhatsappBusinessAccount
}

// GetWhatsappBusinessAccountOk returns a tuple with the WhatsappBusinessAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetWhatsappBusinessAccountOk() (*WhatsappFlowWhatsappBusinessAccount, bool) {
	if o == nil || o.WhatsappBusinessAccount == nil {
		return nil, false
	}
	return o.WhatsappBusinessAccount, true
}

// HasWhatsappBusinessAccount returns a boolean if a field has been set.
func (o *WhatsappFlow) HasWhatsappBusinessAccount() bool {
	if o != nil && o.WhatsappBusinessAccount != nil {
		return true
	}

	return false
}

// SetWhatsappBusinessAccount gets a reference to the given WhatsappFlowWhatsappBusinessAccount and assigns it to the WhatsappBusinessAccount field.
func (o *WhatsappFlow) SetWhatsappBusinessAccount(v WhatsappFlowWhatsappBusinessAccount) {
	o.WhatsappBusinessAccount = &v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *WhatsappFlow) GetValidationErrors() []WhatsappFlowValidationError {
	if o == nil || o.ValidationErrors == nil {
		var ret []WhatsappFlowValidationError
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetValidationErrorsOk() ([]WhatsappFlowValidationError, bool) {
	if o == nil || o.ValidationErrors == nil {
		return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *WhatsappFlow) HasValidationErrors() bool {
	if o != nil && o.ValidationErrors != nil {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []WhatsappFlowValidationError and assigns it to the ValidationErrors field.
func (o *WhatsappFlow) SetValidationErrors(v []WhatsappFlowValidationError) {
	o.ValidationErrors = v
}

// GetJsonVersion returns the JsonVersion field value if set, zero value otherwise.
func (o *WhatsappFlow) GetJsonVersion() string {
	if o == nil || o.JsonVersion == nil {
		var ret string
		return ret
	}
	return *o.JsonVersion
}

// GetJsonVersionOk returns a tuple with the JsonVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetJsonVersionOk() (*string, bool) {
	if o == nil || o.JsonVersion == nil {
		return nil, false
	}
	return o.JsonVersion, true
}

// HasJsonVersion returns a boolean if a field has been set.
func (o *WhatsappFlow) HasJsonVersion() bool {
	if o != nil && o.JsonVersion != nil {
		return true
	}

	return false
}

// SetJsonVersion gets a reference to the given string and assigns it to the JsonVersion field.
func (o *WhatsappFlow) SetJsonVersion(v string) {
	o.JsonVersion = &v
}

// GetDataApiVersion returns the DataApiVersion field value if set, zero value otherwise.
func (o *WhatsappFlow) GetDataApiVersion() string {
	if o == nil || o.DataApiVersion == nil {
		var ret string
		return ret
	}
	return *o.DataApiVersion
}

// GetDataApiVersionOk returns a tuple with the DataApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlow) GetDataApiVersionOk() (*string, bool) {
	if o == nil || o.DataApiVersion == nil {
		return nil, false
	}
	return o.DataApiVersion, true
}

// HasDataApiVersion returns a boolean if a field has been set.
func (o *WhatsappFlow) HasDataApiVersion() bool {
	if o != nil && o.DataApiVersion != nil {
		return true
	}

	return false
}

// SetDataApiVersion gets a reference to the given string and assigns it to the DataApiVersion field.
func (o *WhatsappFlow) SetDataApiVersion(v string) {
	o.DataApiVersion = &v
}

func (o WhatsappFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.WhatsappBusinessAccount != nil {
		toSerialize["whatsappBusinessAccount"] = o.WhatsappBusinessAccount
	}
	if o.ValidationErrors != nil {
		toSerialize["validationErrors"] = o.ValidationErrors
	}
	if o.JsonVersion != nil {
		toSerialize["jsonVersion"] = o.JsonVersion
	}
	if o.DataApiVersion != nil {
		toSerialize["dataApiVersion"] = o.DataApiVersion
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappFlow struct {
	value *WhatsappFlow
	isSet bool
}

func (v NullableWhatsappFlow) Get() *WhatsappFlow {
	return v.value
}

func (v *NullableWhatsappFlow) Set(val *WhatsappFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappFlow(val *WhatsappFlow) *NullableWhatsappFlow {
	return &NullableWhatsappFlow{value: val, isSet: true}
}

func (v NullableWhatsappFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


