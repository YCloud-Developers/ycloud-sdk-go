/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageLocation Use for `location` messages.
type WhatsappMessageLocation struct {
	// Latitude of the location.
	Latitude float64 `json:"latitude"`
	// Longitude of the location.
	Longitude float64 `json:"longitude"`
	// Name of the location.
	Name *string `json:"name,omitempty"`
	// Address of the location. Only displayed if `name` is present.
	Address *string `json:"address,omitempty"`
}

// NewWhatsappMessageLocation instantiates a new WhatsappMessageLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageLocation(latitude float64, longitude float64) *WhatsappMessageLocation {
	this := WhatsappMessageLocation{}
	this.Latitude = latitude
	this.Longitude = longitude
	return &this
}

// NewWhatsappMessageLocationWithDefaults instantiates a new WhatsappMessageLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageLocationWithDefaults() *WhatsappMessageLocation {
	this := WhatsappMessageLocation{}
	return &this
}

// GetLatitude returns the Latitude field value
func (o *WhatsappMessageLocation) GetLatitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageLocation) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *WhatsappMessageLocation) SetLatitude(v float64) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value
func (o *WhatsappMessageLocation) GetLongitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageLocation) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *WhatsappMessageLocation) SetLongitude(v float64) {
	o.Longitude = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhatsappMessageLocation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageLocation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhatsappMessageLocation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WhatsappMessageLocation) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WhatsappMessageLocation) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageLocation) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *WhatsappMessageLocation) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *WhatsappMessageLocation) SetAddress(v string) {
	o.Address = &v
}

func (o WhatsappMessageLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["latitude"] = o.Latitude
	}
	if true {
		toSerialize["longitude"] = o.Longitude
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageLocation struct {
	value *WhatsappMessageLocation
	isSet bool
}

func (v NullableWhatsappMessageLocation) Get() *WhatsappMessageLocation {
	return v.value
}

func (v *NullableWhatsappMessageLocation) Set(val *WhatsappMessageLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageLocation(val *WhatsappMessageLocation) *NullableWhatsappMessageLocation {
	return &NullableWhatsappMessageLocation{value: val, isSet: true}
}

func (v NullableWhatsappMessageLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


