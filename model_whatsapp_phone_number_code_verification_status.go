/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappPhoneNumberCodeVerificationStatus To see if a phone number has been verified via OTP (one-time password).
type WhatsappPhoneNumberCodeVerificationStatus string

// List of WhatsappPhoneNumberCodeVerificationStatus
const (
	WHATSAPPPHONENUMBERCODEVERIFICATIONSTATUS_VERIFIED WhatsappPhoneNumberCodeVerificationStatus = "VERIFIED"
	WHATSAPPPHONENUMBERCODEVERIFICATIONSTATUS_NOT_VERIFIED WhatsappPhoneNumberCodeVerificationStatus = "NOT_VERIFIED"
	WHATSAPPPHONENUMBERCODEVERIFICATIONSTATUS_EXPIRED WhatsappPhoneNumberCodeVerificationStatus = "EXPIRED"
)

// All allowed values of WhatsappPhoneNumberCodeVerificationStatus enum
var AllowedWhatsappPhoneNumberCodeVerificationStatusEnumValues = []WhatsappPhoneNumberCodeVerificationStatus{
	"VERIFIED",
	"NOT_VERIFIED",
	"EXPIRED",
}

func (v *WhatsappPhoneNumberCodeVerificationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappPhoneNumberCodeVerificationStatus(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappPhoneNumberCodeVerificationStatusFromValue returns a pointer to a valid WhatsappPhoneNumberCodeVerificationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappPhoneNumberCodeVerificationStatusFromValue(v string) (*WhatsappPhoneNumberCodeVerificationStatus, error) {
	ev := WhatsappPhoneNumberCodeVerificationStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappPhoneNumberCodeVerificationStatus: valid values are %v", v, AllowedWhatsappPhoneNumberCodeVerificationStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappPhoneNumberCodeVerificationStatus) IsValid() bool {
	for _, existing := range AllowedWhatsappPhoneNumberCodeVerificationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappPhoneNumberCodeVerificationStatus value
func (v WhatsappPhoneNumberCodeVerificationStatus) Ptr() *WhatsappPhoneNumberCodeVerificationStatus {
	return &v
}

type NullableWhatsappPhoneNumberCodeVerificationStatus struct {
	value *WhatsappPhoneNumberCodeVerificationStatus
	isSet bool
}

func (v NullableWhatsappPhoneNumberCodeVerificationStatus) Get() *WhatsappPhoneNumberCodeVerificationStatus {
	return v.value
}

func (v *NullableWhatsappPhoneNumberCodeVerificationStatus) Set(val *WhatsappPhoneNumberCodeVerificationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPhoneNumberCodeVerificationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPhoneNumberCodeVerificationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPhoneNumberCodeVerificationStatus(val *WhatsappPhoneNumberCodeVerificationStatus) *NullableWhatsappPhoneNumberCodeVerificationStatus {
	return &NullableWhatsappPhoneNumberCodeVerificationStatus{value: val, isSet: true}
}

func (v NullableWhatsappPhoneNumberCodeVerificationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPhoneNumberCodeVerificationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

