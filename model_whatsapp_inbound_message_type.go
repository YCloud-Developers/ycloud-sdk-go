/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappInboundMessageType WhatsApp inbound message type. See also [WhatsApp webhook messages object](https://developers.facebook.com/docs/whatsapp/cloud-api/webhooks/components#messages-object).
type WhatsappInboundMessageType string

// List of WhatsappInboundMessageType
const (
	WHATSAPPINBOUNDMESSAGETYPE_TEXT WhatsappInboundMessageType = "text"
	WHATSAPPINBOUNDMESSAGETYPE_IMAGE WhatsappInboundMessageType = "image"
	WHATSAPPINBOUNDMESSAGETYPE_VIDEO WhatsappInboundMessageType = "video"
	WHATSAPPINBOUNDMESSAGETYPE_AUDIO WhatsappInboundMessageType = "audio"
	WHATSAPPINBOUNDMESSAGETYPE_DOCUMENT WhatsappInboundMessageType = "document"
	WHATSAPPINBOUNDMESSAGETYPE_STICKER WhatsappInboundMessageType = "sticker"
	WHATSAPPINBOUNDMESSAGETYPE_CONTACTS WhatsappInboundMessageType = "contacts"
	WHATSAPPINBOUNDMESSAGETYPE_LOCATION WhatsappInboundMessageType = "location"
	WHATSAPPINBOUNDMESSAGETYPE_INTERACTIVE WhatsappInboundMessageType = "interactive"
	WHATSAPPINBOUNDMESSAGETYPE_BUTTON WhatsappInboundMessageType = "button"
	WHATSAPPINBOUNDMESSAGETYPE_REACTION WhatsappInboundMessageType = "reaction"
	WHATSAPPINBOUNDMESSAGETYPE_REQUEST_WELCOME WhatsappInboundMessageType = "request_welcome"
	WHATSAPPINBOUNDMESSAGETYPE_ORDER WhatsappInboundMessageType = "order"
	WHATSAPPINBOUNDMESSAGETYPE_SYSTEM WhatsappInboundMessageType = "system"
	WHATSAPPINBOUNDMESSAGETYPE_UNSUPPORTED WhatsappInboundMessageType = "unsupported"
)

// All allowed values of WhatsappInboundMessageType enum
var AllowedWhatsappInboundMessageTypeEnumValues = []WhatsappInboundMessageType{
	"text",
	"image",
	"video",
	"audio",
	"document",
	"sticker",
	"contacts",
	"location",
	"interactive",
	"button",
	"reaction",
	"request_welcome",
	"order",
	"system",
	"unsupported",
}

func (v *WhatsappInboundMessageType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappInboundMessageType(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappInboundMessageTypeFromValue returns a pointer to a valid WhatsappInboundMessageType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappInboundMessageTypeFromValue(v string) (*WhatsappInboundMessageType, error) {
	ev := WhatsappInboundMessageType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappInboundMessageType: valid values are %v", v, AllowedWhatsappInboundMessageTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappInboundMessageType) IsValid() bool {
	for _, existing := range AllowedWhatsappInboundMessageTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappInboundMessageType value
func (v WhatsappInboundMessageType) Ptr() *WhatsappInboundMessageType {
	return &v
}

type NullableWhatsappInboundMessageType struct {
	value *WhatsappInboundMessageType
	isSet bool
}

func (v NullableWhatsappInboundMessageType) Get() *WhatsappInboundMessageType {
	return v.value
}

func (v *NullableWhatsappInboundMessageType) Set(val *WhatsappInboundMessageType) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageType) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageType(val *WhatsappInboundMessageType) *NullableWhatsappInboundMessageType {
	return &NullableWhatsappInboundMessageType{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

