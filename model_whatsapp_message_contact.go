/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageContact When the message type filed is set to `contacts`, this object is included in the message object.
type WhatsappMessageContact struct {
	Addresses []WhatsappMessageContactAddress `json:"addresses,omitempty"`
	// `YYYY-MM-DD` formatted string.
	Birthday *string `json:"birthday,omitempty"`
	Emails []WhatsappMessageContactEmail `json:"emails,omitempty"`
	Name WhatsappMessageContactName `json:"name"`
	Org *WhatsappMessageContactOrg `json:"org,omitempty"`
	// Contact phone number(s) formatted as a phone object.
	Phones []WhatsappMessageContactPhone `json:"phones,omitempty"`
	// Contact URL(s) formatted as a urls object.
	Urls []WhatsappMessageContactUrl `json:"urls,omitempty"`
}

// NewWhatsappMessageContact instantiates a new WhatsappMessageContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageContact(name WhatsappMessageContactName) *WhatsappMessageContact {
	this := WhatsappMessageContact{}
	this.Name = name
	return &this
}

// NewWhatsappMessageContactWithDefaults instantiates a new WhatsappMessageContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageContactWithDefaults() *WhatsappMessageContact {
	this := WhatsappMessageContact{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetAddresses() []WhatsappMessageContactAddress {
	if o == nil || o.Addresses == nil {
		var ret []WhatsappMessageContactAddress
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetAddressesOk() ([]WhatsappMessageContactAddress, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []WhatsappMessageContactAddress and assigns it to the Addresses field.
func (o *WhatsappMessageContact) SetAddresses(v []WhatsappMessageContactAddress) {
	o.Addresses = v
}

// GetBirthday returns the Birthday field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetBirthday() string {
	if o == nil || o.Birthday == nil {
		var ret string
		return ret
	}
	return *o.Birthday
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetBirthdayOk() (*string, bool) {
	if o == nil || o.Birthday == nil {
		return nil, false
	}
	return o.Birthday, true
}

// HasBirthday returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasBirthday() bool {
	if o != nil && o.Birthday != nil {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given string and assigns it to the Birthday field.
func (o *WhatsappMessageContact) SetBirthday(v string) {
	o.Birthday = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetEmails() []WhatsappMessageContactEmail {
	if o == nil || o.Emails == nil {
		var ret []WhatsappMessageContactEmail
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetEmailsOk() ([]WhatsappMessageContactEmail, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []WhatsappMessageContactEmail and assigns it to the Emails field.
func (o *WhatsappMessageContact) SetEmails(v []WhatsappMessageContactEmail) {
	o.Emails = v
}

// GetName returns the Name field value
func (o *WhatsappMessageContact) GetName() WhatsappMessageContactName {
	if o == nil {
		var ret WhatsappMessageContactName
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetNameOk() (*WhatsappMessageContactName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WhatsappMessageContact) SetName(v WhatsappMessageContactName) {
	o.Name = v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetOrg() WhatsappMessageContactOrg {
	if o == nil || o.Org == nil {
		var ret WhatsappMessageContactOrg
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetOrgOk() (*WhatsappMessageContactOrg, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given WhatsappMessageContactOrg and assigns it to the Org field.
func (o *WhatsappMessageContact) SetOrg(v WhatsappMessageContactOrg) {
	o.Org = &v
}

// GetPhones returns the Phones field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetPhones() []WhatsappMessageContactPhone {
	if o == nil || o.Phones == nil {
		var ret []WhatsappMessageContactPhone
		return ret
	}
	return o.Phones
}

// GetPhonesOk returns a tuple with the Phones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetPhonesOk() ([]WhatsappMessageContactPhone, bool) {
	if o == nil || o.Phones == nil {
		return nil, false
	}
	return o.Phones, true
}

// HasPhones returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasPhones() bool {
	if o != nil && o.Phones != nil {
		return true
	}

	return false
}

// SetPhones gets a reference to the given []WhatsappMessageContactPhone and assigns it to the Phones field.
func (o *WhatsappMessageContact) SetPhones(v []WhatsappMessageContactPhone) {
	o.Phones = v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *WhatsappMessageContact) GetUrls() []WhatsappMessageContactUrl {
	if o == nil || o.Urls == nil {
		var ret []WhatsappMessageContactUrl
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContact) GetUrlsOk() ([]WhatsappMessageContactUrl, bool) {
	if o == nil || o.Urls == nil {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *WhatsappMessageContact) HasUrls() bool {
	if o != nil && o.Urls != nil {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []WhatsappMessageContactUrl and assigns it to the Urls field.
func (o *WhatsappMessageContact) SetUrls(v []WhatsappMessageContactUrl) {
	o.Urls = v
}

func (o WhatsappMessageContact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.Birthday != nil {
		toSerialize["birthday"] = o.Birthday
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	if o.Phones != nil {
		toSerialize["phones"] = o.Phones
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageContact struct {
	value *WhatsappMessageContact
	isSet bool
}

func (v NullableWhatsappMessageContact) Get() *WhatsappMessageContact {
	return v.value
}

func (v *NullableWhatsappMessageContact) Set(val *WhatsappMessageContact) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageContact) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageContact(val *WhatsappMessageContact) *NullableWhatsappMessageContact {
	return &NullableWhatsappMessageContact{value: val, isSet: true}
}

func (v NullableWhatsappMessageContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


