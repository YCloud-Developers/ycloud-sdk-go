/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageInteractiveNfmReply Sent when a customer responds to a WhatsApp Flow (Next Feature Messaging). Returned when `type` is `nfm_reply`.
type WhatsappInboundMessageInteractiveNfmReply struct {
	// The name of the flow or form being replied to.
	Name *string `json:"name,omitempty"`
	// JSON string containing the user's responses to the flow. Contains form field values and flow token.
	ResponseJson *string `json:"response_json,omitempty"`
	// The body content of the flow reply message.
	Body *string `json:"body,omitempty"`
}

// NewWhatsappInboundMessageInteractiveNfmReply instantiates a new WhatsappInboundMessageInteractiveNfmReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageInteractiveNfmReply() *WhatsappInboundMessageInteractiveNfmReply {
	this := WhatsappInboundMessageInteractiveNfmReply{}
	return &this
}

// NewWhatsappInboundMessageInteractiveNfmReplyWithDefaults instantiates a new WhatsappInboundMessageInteractiveNfmReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageInteractiveNfmReplyWithDefaults() *WhatsappInboundMessageInteractiveNfmReply {
	this := WhatsappInboundMessageInteractiveNfmReply{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WhatsappInboundMessageInteractiveNfmReply) SetName(v string) {
	o.Name = &v
}

// GetResponseJson returns the ResponseJson field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetResponseJson() string {
	if o == nil || o.ResponseJson == nil {
		var ret string
		return ret
	}
	return *o.ResponseJson
}

// GetResponseJsonOk returns a tuple with the ResponseJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetResponseJsonOk() (*string, bool) {
	if o == nil || o.ResponseJson == nil {
		return nil, false
	}
	return o.ResponseJson, true
}

// HasResponseJson returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) HasResponseJson() bool {
	if o != nil && o.ResponseJson != nil {
		return true
	}

	return false
}

// SetResponseJson gets a reference to the given string and assigns it to the ResponseJson field.
func (o *WhatsappInboundMessageInteractiveNfmReply) SetResponseJson(v string) {
	o.ResponseJson = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractiveNfmReply) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *WhatsappInboundMessageInteractiveNfmReply) SetBody(v string) {
	o.Body = &v
}

func (o WhatsappInboundMessageInteractiveNfmReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ResponseJson != nil {
		toSerialize["response_json"] = o.ResponseJson
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageInteractiveNfmReply struct {
	value *WhatsappInboundMessageInteractiveNfmReply
	isSet bool
}

func (v NullableWhatsappInboundMessageInteractiveNfmReply) Get() *WhatsappInboundMessageInteractiveNfmReply {
	return v.value
}

func (v *NullableWhatsappInboundMessageInteractiveNfmReply) Set(val *WhatsappInboundMessageInteractiveNfmReply) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageInteractiveNfmReply) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageInteractiveNfmReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageInteractiveNfmReply(val *WhatsappInboundMessageInteractiveNfmReply) *NullableWhatsappInboundMessageInteractiveNfmReply {
	return &NullableWhatsappInboundMessageInteractiveNfmReply{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageInteractiveNfmReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageInteractiveNfmReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


