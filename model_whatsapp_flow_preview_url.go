/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// WhatsappFlowPreviewUrl struct for WhatsappFlowPreviewUrl
type WhatsappFlowPreviewUrl struct {
	// The flow preview url
	PreviewUrl *string `json:"previewUrl,omitempty"`
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
}

// NewWhatsappFlowPreviewUrl instantiates a new WhatsappFlowPreviewUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappFlowPreviewUrl() *WhatsappFlowPreviewUrl {
	this := WhatsappFlowPreviewUrl{}
	return &this
}

// NewWhatsappFlowPreviewUrlWithDefaults instantiates a new WhatsappFlowPreviewUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappFlowPreviewUrlWithDefaults() *WhatsappFlowPreviewUrl {
	this := WhatsappFlowPreviewUrl{}
	return &this
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *WhatsappFlowPreviewUrl) GetPreviewUrl() string {
	if o == nil || o.PreviewUrl == nil {
		var ret string
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowPreviewUrl) GetPreviewUrlOk() (*string, bool) {
	if o == nil || o.PreviewUrl == nil {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *WhatsappFlowPreviewUrl) HasPreviewUrl() bool {
	if o != nil && o.PreviewUrl != nil {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given string and assigns it to the PreviewUrl field.
func (o *WhatsappFlowPreviewUrl) SetPreviewUrl(v string) {
	o.PreviewUrl = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *WhatsappFlowPreviewUrl) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowPreviewUrl) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *WhatsappFlowPreviewUrl) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *WhatsappFlowPreviewUrl) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

func (o WhatsappFlowPreviewUrl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreviewUrl != nil {
		toSerialize["previewUrl"] = o.PreviewUrl
	}
	if o.ExpiresAt != nil {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappFlowPreviewUrl struct {
	value *WhatsappFlowPreviewUrl
	isSet bool
}

func (v NullableWhatsappFlowPreviewUrl) Get() *WhatsappFlowPreviewUrl {
	return v.value
}

func (v *NullableWhatsappFlowPreviewUrl) Set(val *WhatsappFlowPreviewUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappFlowPreviewUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappFlowPreviewUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappFlowPreviewUrl(val *WhatsappFlowPreviewUrl) *NullableWhatsappFlowPreviewUrl {
	return &NullableWhatsappFlowPreviewUrl{value: val, isSet: true}
}

func (v NullableWhatsappFlowPreviewUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappFlowPreviewUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


