/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageError When the message type `unsupported`, this object is included.
type WhatsappInboundMessageError struct {
	// The error code.
	Code *string `json:"code,omitempty"`
	// The error title.
	Title *string `json:"title,omitempty"`
	// The error message.
	Message *string `json:"message,omitempty"`
	// An error data object with the following properties: - `details`: A string describing the reason for the error. Example: `Message type is currently not supported.`.
	ErrorData map[string]interface{} `json:"error_data,omitempty"`
}

// NewWhatsappInboundMessageError instantiates a new WhatsappInboundMessageError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageError() *WhatsappInboundMessageError {
	this := WhatsappInboundMessageError{}
	return &this
}

// NewWhatsappInboundMessageErrorWithDefaults instantiates a new WhatsappInboundMessageError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageErrorWithDefaults() *WhatsappInboundMessageError {
	this := WhatsappInboundMessageError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *WhatsappInboundMessageError) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageError) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *WhatsappInboundMessageError) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *WhatsappInboundMessageError) SetCode(v string) {
	o.Code = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WhatsappInboundMessageError) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageError) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WhatsappInboundMessageError) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WhatsappInboundMessageError) SetTitle(v string) {
	o.Title = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WhatsappInboundMessageError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageError) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WhatsappInboundMessageError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WhatsappInboundMessageError) SetMessage(v string) {
	o.Message = &v
}

// GetErrorData returns the ErrorData field value if set, zero value otherwise.
func (o *WhatsappInboundMessageError) GetErrorData() map[string]interface{} {
	if o == nil || o.ErrorData == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ErrorData
}

// GetErrorDataOk returns a tuple with the ErrorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageError) GetErrorDataOk() (map[string]interface{}, bool) {
	if o == nil || o.ErrorData == nil {
		return nil, false
	}
	return o.ErrorData, true
}

// HasErrorData returns a boolean if a field has been set.
func (o *WhatsappInboundMessageError) HasErrorData() bool {
	if o != nil && o.ErrorData != nil {
		return true
	}

	return false
}

// SetErrorData gets a reference to the given map[string]interface{} and assigns it to the ErrorData field.
func (o *WhatsappInboundMessageError) SetErrorData(v map[string]interface{}) {
	o.ErrorData = v
}

func (o WhatsappInboundMessageError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.ErrorData != nil {
		toSerialize["error_data"] = o.ErrorData
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageError struct {
	value *WhatsappInboundMessageError
	isSet bool
}

func (v NullableWhatsappInboundMessageError) Get() *WhatsappInboundMessageError {
	return v.value
}

func (v *NullableWhatsappInboundMessageError) Set(val *WhatsappInboundMessageError) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageError) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageError(val *WhatsappInboundMessageError) *NullableWhatsappInboundMessageError {
	return &NullableWhatsappInboundMessageError{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


