/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WebhookEndpointUpdateRequest struct for WebhookEndpointUpdateRequest
type WebhookEndpointUpdateRequest struct {
	// The URL of the webhook endpoint.
	Url *string `json:"url,omitempty"`
	// The list of events to enable for this endpoint.
	EnabledEvents []EventType `json:"enabledEvents,omitempty"`
	// Optional configuration for event properties in webhook payloads. Specifies which properties should be included for specific event types. When `enabledEvents` contains `contact.attributes_changed`, this field is required and must contain at least one event property configuration for that event type.
	EventProperties []EventProperty `json:"eventProperties,omitempty"`
	// An optional description of what the webhook is used for.
	Description *string `json:"description,omitempty"`
	Status *WebhookEndpointStatus `json:"status,omitempty"`
}

// NewWebhookEndpointUpdateRequest instantiates a new WebhookEndpointUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEndpointUpdateRequest() *WebhookEndpointUpdateRequest {
	this := WebhookEndpointUpdateRequest{}
	return &this
}

// NewWebhookEndpointUpdateRequestWithDefaults instantiates a new WebhookEndpointUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEndpointUpdateRequestWithDefaults() *WebhookEndpointUpdateRequest {
	this := WebhookEndpointUpdateRequest{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WebhookEndpointUpdateRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpointUpdateRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WebhookEndpointUpdateRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WebhookEndpointUpdateRequest) SetUrl(v string) {
	o.Url = &v
}

// GetEnabledEvents returns the EnabledEvents field value if set, zero value otherwise.
func (o *WebhookEndpointUpdateRequest) GetEnabledEvents() []EventType {
	if o == nil || o.EnabledEvents == nil {
		var ret []EventType
		return ret
	}
	return o.EnabledEvents
}

// GetEnabledEventsOk returns a tuple with the EnabledEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpointUpdateRequest) GetEnabledEventsOk() ([]EventType, bool) {
	if o == nil || o.EnabledEvents == nil {
		return nil, false
	}
	return o.EnabledEvents, true
}

// HasEnabledEvents returns a boolean if a field has been set.
func (o *WebhookEndpointUpdateRequest) HasEnabledEvents() bool {
	if o != nil && o.EnabledEvents != nil {
		return true
	}

	return false
}

// SetEnabledEvents gets a reference to the given []EventType and assigns it to the EnabledEvents field.
func (o *WebhookEndpointUpdateRequest) SetEnabledEvents(v []EventType) {
	o.EnabledEvents = v
}

// GetEventProperties returns the EventProperties field value if set, zero value otherwise.
func (o *WebhookEndpointUpdateRequest) GetEventProperties() []EventProperty {
	if o == nil || o.EventProperties == nil {
		var ret []EventProperty
		return ret
	}
	return o.EventProperties
}

// GetEventPropertiesOk returns a tuple with the EventProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpointUpdateRequest) GetEventPropertiesOk() ([]EventProperty, bool) {
	if o == nil || o.EventProperties == nil {
		return nil, false
	}
	return o.EventProperties, true
}

// HasEventProperties returns a boolean if a field has been set.
func (o *WebhookEndpointUpdateRequest) HasEventProperties() bool {
	if o != nil && o.EventProperties != nil {
		return true
	}

	return false
}

// SetEventProperties gets a reference to the given []EventProperty and assigns it to the EventProperties field.
func (o *WebhookEndpointUpdateRequest) SetEventProperties(v []EventProperty) {
	o.EventProperties = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebhookEndpointUpdateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpointUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebhookEndpointUpdateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebhookEndpointUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhookEndpointUpdateRequest) GetStatus() WebhookEndpointStatus {
	if o == nil || o.Status == nil {
		var ret WebhookEndpointStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpointUpdateRequest) GetStatusOk() (*WebhookEndpointStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhookEndpointUpdateRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WebhookEndpointStatus and assigns it to the Status field.
func (o *WebhookEndpointUpdateRequest) SetStatus(v WebhookEndpointStatus) {
	o.Status = &v
}

func (o WebhookEndpointUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.EnabledEvents != nil {
		toSerialize["enabledEvents"] = o.EnabledEvents
	}
	if o.EventProperties != nil {
		toSerialize["eventProperties"] = o.EventProperties
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookEndpointUpdateRequest struct {
	value *WebhookEndpointUpdateRequest
	isSet bool
}

func (v NullableWebhookEndpointUpdateRequest) Get() *WebhookEndpointUpdateRequest {
	return v.value
}

func (v *NullableWebhookEndpointUpdateRequest) Set(val *WebhookEndpointUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEndpointUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEndpointUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEndpointUpdateRequest(val *WebhookEndpointUpdateRequest) *NullableWebhookEndpointUpdateRequest {
	return &NullableWebhookEndpointUpdateRequest{value: val, isSet: true}
}

func (v NullableWebhookEndpointUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEndpointUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


