/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// WhatsappTemplate See [WhatsApp Templates](https://developers.facebook.com/docs/whatsapp/business-management-api/message-templates).
type WhatsappTemplate struct {
	// WhatsApp Business Account ID.
	WabaId string `json:"wabaId"`
	// Name of the template.
	Name string `json:"name"`
	// Language code of the template. See [Supported Languages](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages) for all codes.
	Language string `json:"language"`
	Category *WhatsappTemplateCategory `json:"category,omitempty"`
	SubCategory *WhatsappTemplateSubCategory `json:"subCategory,omitempty"`
	// This field indicates the template's previous category (or `null`, for newly created templates after April 1, 2023). Compare this value to the template's `category` field value, which indicates the template's current category.
	PreviousCategory *string `json:"previousCategory,omitempty"`
	// If we are unable to deliver a message for an amount of time that exceeds its time-to-live, we will stop retrying and drop the message. By default, messages that use an authentication template have a default TTL of **10 minutes**, and messages that use a utility or marketing template have a default TTL of **30 days**. Set its value between `30` and `900` seconds (i.e., 30 seconds to 15 minutes) for authentication templates, or `30` and `43200` seconds (i.e., 30 seconds to 12 hours) for utility templates, or `43200` and `2592000` seconds (i.e., 12 hours to 30 days) for marketing templates. Alternatively, you can set this value to `-1`, which will set a custom TTL of 30 days for either type of template. We encourage you to set a time-to-live for all of your authentication templates, preferably equal to or less than your code expiration time, to ensure your customers only get a message when a code is still usable. Authentication templates created before October 23, 2024, have a default TTL of 30 days.
	MessageSendTtlSeconds *int32 `json:"messageSendTtlSeconds,omitempty"`
	// Template components. A template consists of `HEADER`, `BODY`, `FOOTER`, and `BUTTONS` components. `BODY` component is required, the other types are optional.
	Components []WhatsappTemplateComponent `json:"components,omitempty"`
	Status *WhatsappTemplateStatus `json:"status,omitempty"`
	QualityRating *WhatsappTemplateQualityRating `json:"qualityRating,omitempty"`
	// The reason why the template is rejected.
	Reason *string `json:"reason,omitempty"`
	// The time at which this object is created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// The time at which this object is updated, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	StatusUpdateEvent *WhatsappTemplateStatusUpdateEventEnum `json:"statusUpdateEvent,omitempty"`
	// The date at which the template will be disabled. When a WhatsApp template `FLAGGED` event is received, this field is set.
	DisableDate *string `json:"disableDate,omitempty"`
	WhatsappApiError *WhatsappApiError `json:"whatsappApiError,omitempty"`
}

// NewWhatsappTemplate instantiates a new WhatsappTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappTemplate(wabaId string, name string, language string) *WhatsappTemplate {
	this := WhatsappTemplate{}
	this.WabaId = wabaId
	this.Name = name
	this.Language = language
	return &this
}

// NewWhatsappTemplateWithDefaults instantiates a new WhatsappTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappTemplateWithDefaults() *WhatsappTemplate {
	this := WhatsappTemplate{}
	return &this
}

// GetWabaId returns the WabaId field value
func (o *WhatsappTemplate) GetWabaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WabaId
}

// GetWabaIdOk returns a tuple with the WabaId field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetWabaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WabaId, true
}

// SetWabaId sets field value
func (o *WhatsappTemplate) SetWabaId(v string) {
	o.WabaId = v
}

// GetName returns the Name field value
func (o *WhatsappTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WhatsappTemplate) SetName(v string) {
	o.Name = v
}

// GetLanguage returns the Language field value
func (o *WhatsappTemplate) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *WhatsappTemplate) SetLanguage(v string) {
	o.Language = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetCategory() WhatsappTemplateCategory {
	if o == nil || o.Category == nil {
		var ret WhatsappTemplateCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetCategoryOk() (*WhatsappTemplateCategory, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given WhatsappTemplateCategory and assigns it to the Category field.
func (o *WhatsappTemplate) SetCategory(v WhatsappTemplateCategory) {
	o.Category = &v
}

// GetSubCategory returns the SubCategory field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetSubCategory() WhatsappTemplateSubCategory {
	if o == nil || o.SubCategory == nil {
		var ret WhatsappTemplateSubCategory
		return ret
	}
	return *o.SubCategory
}

// GetSubCategoryOk returns a tuple with the SubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetSubCategoryOk() (*WhatsappTemplateSubCategory, bool) {
	if o == nil || o.SubCategory == nil {
		return nil, false
	}
	return o.SubCategory, true
}

// HasSubCategory returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasSubCategory() bool {
	if o != nil && o.SubCategory != nil {
		return true
	}

	return false
}

// SetSubCategory gets a reference to the given WhatsappTemplateSubCategory and assigns it to the SubCategory field.
func (o *WhatsappTemplate) SetSubCategory(v WhatsappTemplateSubCategory) {
	o.SubCategory = &v
}

// GetPreviousCategory returns the PreviousCategory field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetPreviousCategory() string {
	if o == nil || o.PreviousCategory == nil {
		var ret string
		return ret
	}
	return *o.PreviousCategory
}

// GetPreviousCategoryOk returns a tuple with the PreviousCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetPreviousCategoryOk() (*string, bool) {
	if o == nil || o.PreviousCategory == nil {
		return nil, false
	}
	return o.PreviousCategory, true
}

// HasPreviousCategory returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasPreviousCategory() bool {
	if o != nil && o.PreviousCategory != nil {
		return true
	}

	return false
}

// SetPreviousCategory gets a reference to the given string and assigns it to the PreviousCategory field.
func (o *WhatsappTemplate) SetPreviousCategory(v string) {
	o.PreviousCategory = &v
}

// GetMessageSendTtlSeconds returns the MessageSendTtlSeconds field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetMessageSendTtlSeconds() int32 {
	if o == nil || o.MessageSendTtlSeconds == nil {
		var ret int32
		return ret
	}
	return *o.MessageSendTtlSeconds
}

// GetMessageSendTtlSecondsOk returns a tuple with the MessageSendTtlSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetMessageSendTtlSecondsOk() (*int32, bool) {
	if o == nil || o.MessageSendTtlSeconds == nil {
		return nil, false
	}
	return o.MessageSendTtlSeconds, true
}

// HasMessageSendTtlSeconds returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasMessageSendTtlSeconds() bool {
	if o != nil && o.MessageSendTtlSeconds != nil {
		return true
	}

	return false
}

// SetMessageSendTtlSeconds gets a reference to the given int32 and assigns it to the MessageSendTtlSeconds field.
func (o *WhatsappTemplate) SetMessageSendTtlSeconds(v int32) {
	o.MessageSendTtlSeconds = &v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetComponents() []WhatsappTemplateComponent {
	if o == nil || o.Components == nil {
		var ret []WhatsappTemplateComponent
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetComponentsOk() ([]WhatsappTemplateComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []WhatsappTemplateComponent and assigns it to the Components field.
func (o *WhatsappTemplate) SetComponents(v []WhatsappTemplateComponent) {
	o.Components = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetStatus() WhatsappTemplateStatus {
	if o == nil || o.Status == nil {
		var ret WhatsappTemplateStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetStatusOk() (*WhatsappTemplateStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WhatsappTemplateStatus and assigns it to the Status field.
func (o *WhatsappTemplate) SetStatus(v WhatsappTemplateStatus) {
	o.Status = &v
}

// GetQualityRating returns the QualityRating field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetQualityRating() WhatsappTemplateQualityRating {
	if o == nil || o.QualityRating == nil {
		var ret WhatsappTemplateQualityRating
		return ret
	}
	return *o.QualityRating
}

// GetQualityRatingOk returns a tuple with the QualityRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetQualityRatingOk() (*WhatsappTemplateQualityRating, bool) {
	if o == nil || o.QualityRating == nil {
		return nil, false
	}
	return o.QualityRating, true
}

// HasQualityRating returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasQualityRating() bool {
	if o != nil && o.QualityRating != nil {
		return true
	}

	return false
}

// SetQualityRating gets a reference to the given WhatsappTemplateQualityRating and assigns it to the QualityRating field.
func (o *WhatsappTemplate) SetQualityRating(v WhatsappTemplateQualityRating) {
	o.QualityRating = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WhatsappTemplate) SetReason(v string) {
	o.Reason = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *WhatsappTemplate) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *WhatsappTemplate) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetStatusUpdateEvent returns the StatusUpdateEvent field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetStatusUpdateEvent() WhatsappTemplateStatusUpdateEventEnum {
	if o == nil || o.StatusUpdateEvent == nil {
		var ret WhatsappTemplateStatusUpdateEventEnum
		return ret
	}
	return *o.StatusUpdateEvent
}

// GetStatusUpdateEventOk returns a tuple with the StatusUpdateEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetStatusUpdateEventOk() (*WhatsappTemplateStatusUpdateEventEnum, bool) {
	if o == nil || o.StatusUpdateEvent == nil {
		return nil, false
	}
	return o.StatusUpdateEvent, true
}

// HasStatusUpdateEvent returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasStatusUpdateEvent() bool {
	if o != nil && o.StatusUpdateEvent != nil {
		return true
	}

	return false
}

// SetStatusUpdateEvent gets a reference to the given WhatsappTemplateStatusUpdateEventEnum and assigns it to the StatusUpdateEvent field.
func (o *WhatsappTemplate) SetStatusUpdateEvent(v WhatsappTemplateStatusUpdateEventEnum) {
	o.StatusUpdateEvent = &v
}

// GetDisableDate returns the DisableDate field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetDisableDate() string {
	if o == nil || o.DisableDate == nil {
		var ret string
		return ret
	}
	return *o.DisableDate
}

// GetDisableDateOk returns a tuple with the DisableDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetDisableDateOk() (*string, bool) {
	if o == nil || o.DisableDate == nil {
		return nil, false
	}
	return o.DisableDate, true
}

// HasDisableDate returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasDisableDate() bool {
	if o != nil && o.DisableDate != nil {
		return true
	}

	return false
}

// SetDisableDate gets a reference to the given string and assigns it to the DisableDate field.
func (o *WhatsappTemplate) SetDisableDate(v string) {
	o.DisableDate = &v
}

// GetWhatsappApiError returns the WhatsappApiError field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetWhatsappApiError() WhatsappApiError {
	if o == nil || o.WhatsappApiError == nil {
		var ret WhatsappApiError
		return ret
	}
	return *o.WhatsappApiError
}

// GetWhatsappApiErrorOk returns a tuple with the WhatsappApiError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetWhatsappApiErrorOk() (*WhatsappApiError, bool) {
	if o == nil || o.WhatsappApiError == nil {
		return nil, false
	}
	return o.WhatsappApiError, true
}

// HasWhatsappApiError returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasWhatsappApiError() bool {
	if o != nil && o.WhatsappApiError != nil {
		return true
	}

	return false
}

// SetWhatsappApiError gets a reference to the given WhatsappApiError and assigns it to the WhatsappApiError field.
func (o *WhatsappTemplate) SetWhatsappApiError(v WhatsappApiError) {
	o.WhatsappApiError = &v
}

func (o WhatsappTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["wabaId"] = o.WabaId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["language"] = o.Language
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.SubCategory != nil {
		toSerialize["subCategory"] = o.SubCategory
	}
	if o.PreviousCategory != nil {
		toSerialize["previousCategory"] = o.PreviousCategory
	}
	if o.MessageSendTtlSeconds != nil {
		toSerialize["messageSendTtlSeconds"] = o.MessageSendTtlSeconds
	}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.QualityRating != nil {
		toSerialize["qualityRating"] = o.QualityRating
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if o.StatusUpdateEvent != nil {
		toSerialize["statusUpdateEvent"] = o.StatusUpdateEvent
	}
	if o.DisableDate != nil {
		toSerialize["disableDate"] = o.DisableDate
	}
	if o.WhatsappApiError != nil {
		toSerialize["whatsappApiError"] = o.WhatsappApiError
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappTemplate struct {
	value *WhatsappTemplate
	isSet bool
}

func (v NullableWhatsappTemplate) Get() *WhatsappTemplate {
	return v.value
}

func (v *NullableWhatsappTemplate) Set(val *WhatsappTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappTemplate(val *WhatsappTemplate) *NullableWhatsappTemplate {
	return &NullableWhatsappTemplate{value: val, isSet: true}
}

func (v NullableWhatsappTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


