/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageInteractive When a customer has interacted with your message, this object is included in the message object.
type WhatsappInboundMessageInteractive struct {
	// The type of interactive message received. - `button_reply`: Sent when a customer clicks a button. - `list_reply`: Sent when a customer selects an item from a list.
	Type *string `json:"type,omitempty"`
	ButtonReply *WhatsappInboundMessageInteractiveButtonReply `json:"button_reply,omitempty"`
	ListReply *WhatsappInboundMessageInteractiveListReply `json:"list_reply,omitempty"`
}

// NewWhatsappInboundMessageInteractive instantiates a new WhatsappInboundMessageInteractive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageInteractive() *WhatsappInboundMessageInteractive {
	this := WhatsappInboundMessageInteractive{}
	return &this
}

// NewWhatsappInboundMessageInteractiveWithDefaults instantiates a new WhatsappInboundMessageInteractive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageInteractiveWithDefaults() *WhatsappInboundMessageInteractive {
	this := WhatsappInboundMessageInteractive{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractive) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractive) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractive) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsappInboundMessageInteractive) SetType(v string) {
	o.Type = &v
}

// GetButtonReply returns the ButtonReply field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractive) GetButtonReply() WhatsappInboundMessageInteractiveButtonReply {
	if o == nil || o.ButtonReply == nil {
		var ret WhatsappInboundMessageInteractiveButtonReply
		return ret
	}
	return *o.ButtonReply
}

// GetButtonReplyOk returns a tuple with the ButtonReply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractive) GetButtonReplyOk() (*WhatsappInboundMessageInteractiveButtonReply, bool) {
	if o == nil || o.ButtonReply == nil {
		return nil, false
	}
	return o.ButtonReply, true
}

// HasButtonReply returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractive) HasButtonReply() bool {
	if o != nil && o.ButtonReply != nil {
		return true
	}

	return false
}

// SetButtonReply gets a reference to the given WhatsappInboundMessageInteractiveButtonReply and assigns it to the ButtonReply field.
func (o *WhatsappInboundMessageInteractive) SetButtonReply(v WhatsappInboundMessageInteractiveButtonReply) {
	o.ButtonReply = &v
}

// GetListReply returns the ListReply field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractive) GetListReply() WhatsappInboundMessageInteractiveListReply {
	if o == nil || o.ListReply == nil {
		var ret WhatsappInboundMessageInteractiveListReply
		return ret
	}
	return *o.ListReply
}

// GetListReplyOk returns a tuple with the ListReply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractive) GetListReplyOk() (*WhatsappInboundMessageInteractiveListReply, bool) {
	if o == nil || o.ListReply == nil {
		return nil, false
	}
	return o.ListReply, true
}

// HasListReply returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractive) HasListReply() bool {
	if o != nil && o.ListReply != nil {
		return true
	}

	return false
}

// SetListReply gets a reference to the given WhatsappInboundMessageInteractiveListReply and assigns it to the ListReply field.
func (o *WhatsappInboundMessageInteractive) SetListReply(v WhatsappInboundMessageInteractiveListReply) {
	o.ListReply = &v
}

func (o WhatsappInboundMessageInteractive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ButtonReply != nil {
		toSerialize["button_reply"] = o.ButtonReply
	}
	if o.ListReply != nil {
		toSerialize["list_reply"] = o.ListReply
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageInteractive struct {
	value *WhatsappInboundMessageInteractive
	isSet bool
}

func (v NullableWhatsappInboundMessageInteractive) Get() *WhatsappInboundMessageInteractive {
	return v.value
}

func (v *NullableWhatsappInboundMessageInteractive) Set(val *WhatsappInboundMessageInteractive) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageInteractive) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageInteractive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageInteractive(val *WhatsappInboundMessageInteractive) *NullableWhatsappInboundMessageInteractive {
	return &NullableWhatsappInboundMessageInteractive{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageInteractive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageInteractive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


