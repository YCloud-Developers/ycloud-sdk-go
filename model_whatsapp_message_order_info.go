/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageOrderInfo Order info.
type WhatsappMessageOrderInfo struct {
	Status *WhatsappMessageOrderStatusEnum `json:"status,omitempty"`
	// Only supported value is `quick_pay`. When this field is passed in we hide the \"Review and Pay\" button and only show the \"Pay Now\" button in the order details bubble.
	Type *string `json:"type,omitempty"`
	// Unique identifier of the Facebook catalog being used by the business. If you do not provide this field, you must provide the following fields inside the items object: `country_of_origin`, `importer_name`, and `importer_address`.
	CatalogId *string `json:"catalog_id,omitempty"`
	// Array of items in the order.
	Items      []WhatsappMessageOrderItem      `json:"items,omitempty"`
	Subtotal   *WhatsappMessageOrderAmount     `json:"subtotal,omitempty"`
	Tax        *WhatsappMessageOrderAmount     `json:"tax,omitempty"`
	Shipping   *WhatsappMessageOrderAmount     `json:"shipping,omitempty"`
	Discount   *WhatsappMessageOrderAmount     `json:"discount,omitempty"`
	Expiration *WhatsappMessageOrderExpiration `json:"expiration,omitempty"`
	// **Optional.** Text for sharing status related information. Could be useful while sending cancellation. Max character limit is 120 characters.
	Description *string `json:"description,omitempty"`
}

// NewWhatsappMessageOrderInfo instantiates a new WhatsappMessageOrderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageOrderInfo() *WhatsappMessageOrderInfo {
	this := WhatsappMessageOrderInfo{}
	return &this
}

// NewWhatsappMessageOrderInfoWithDefaults instantiates a new WhatsappMessageOrderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageOrderInfoWithDefaults() *WhatsappMessageOrderInfo {
	this := WhatsappMessageOrderInfo{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetStatus() WhatsappMessageOrderStatusEnum {
	if o == nil || o.Status == nil {
		var ret WhatsappMessageOrderStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetStatusOk() (*WhatsappMessageOrderStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WhatsappMessageOrderStatusEnum and assigns it to the Status field.
func (o *WhatsappMessageOrderInfo) SetStatus(v WhatsappMessageOrderStatusEnum) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsappMessageOrderInfo) SetType(v string) {
	o.Type = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetCatalogId() string {
	if o == nil || o.CatalogId == nil {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetCatalogIdOk() (*string, bool) {
	if o == nil || o.CatalogId == nil {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasCatalogId() bool {
	if o != nil && o.CatalogId != nil {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *WhatsappMessageOrderInfo) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetItems() []WhatsappMessageOrderItem {
	if o == nil || o.Items == nil {
		var ret []WhatsappMessageOrderItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetItemsOk() ([]WhatsappMessageOrderItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []WhatsappMessageOrderItem and assigns it to the Items field.
func (o *WhatsappMessageOrderInfo) SetItems(v []WhatsappMessageOrderItem) {
	o.Items = v
}

// GetSubtotal returns the Subtotal field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetSubtotal() WhatsappMessageOrderAmount {
	if o == nil || o.Subtotal == nil {
		var ret WhatsappMessageOrderAmount
		return ret
	}
	return *o.Subtotal
}

// GetSubtotalOk returns a tuple with the Subtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetSubtotalOk() (*WhatsappMessageOrderAmount, bool) {
	if o == nil || o.Subtotal == nil {
		return nil, false
	}
	return o.Subtotal, true
}

// HasSubtotal returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasSubtotal() bool {
	if o != nil && o.Subtotal != nil {
		return true
	}

	return false
}

// SetSubtotal gets a reference to the given WhatsappMessageOrderAmount and assigns it to the Subtotal field.
func (o *WhatsappMessageOrderInfo) SetSubtotal(v WhatsappMessageOrderAmount) {
	o.Subtotal = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetTax() WhatsappMessageOrderAmount {
	if o == nil || o.Tax == nil {
		var ret WhatsappMessageOrderAmount
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetTaxOk() (*WhatsappMessageOrderAmount, bool) {
	if o == nil || o.Tax == nil {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasTax() bool {
	if o != nil && o.Tax != nil {
		return true
	}

	return false
}

// SetTax gets a reference to the given WhatsappMessageOrderAmount and assigns it to the Tax field.
func (o *WhatsappMessageOrderInfo) SetTax(v WhatsappMessageOrderAmount) {
	o.Tax = &v
}

// GetShipping returns the Shipping field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetShipping() WhatsappMessageOrderAmount {
	if o == nil || o.Shipping == nil {
		var ret WhatsappMessageOrderAmount
		return ret
	}
	return *o.Shipping
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetShippingOk() (*WhatsappMessageOrderAmount, bool) {
	if o == nil || o.Shipping == nil {
		return nil, false
	}
	return o.Shipping, true
}

// HasShipping returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasShipping() bool {
	if o != nil && o.Shipping != nil {
		return true
	}

	return false
}

// SetShipping gets a reference to the given WhatsappMessageOrderAmount and assigns it to the Shipping field.
func (o *WhatsappMessageOrderInfo) SetShipping(v WhatsappMessageOrderAmount) {
	o.Shipping = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetDiscount() WhatsappMessageOrderAmount {
	if o == nil || o.Discount == nil {
		var ret WhatsappMessageOrderAmount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetDiscountOk() (*WhatsappMessageOrderAmount, bool) {
	if o == nil || o.Discount == nil {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasDiscount() bool {
	if o != nil && o.Discount != nil {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given WhatsappMessageOrderAmount and assigns it to the Discount field.
func (o *WhatsappMessageOrderInfo) SetDiscount(v WhatsappMessageOrderAmount) {
	o.Discount = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetExpiration() WhatsappMessageOrderExpiration {
	if o == nil || o.Expiration == nil {
		var ret WhatsappMessageOrderExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetExpirationOk() (*WhatsappMessageOrderExpiration, bool) {
	if o == nil || o.Expiration == nil {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasExpiration() bool {
	if o != nil && o.Expiration != nil {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given WhatsappMessageOrderExpiration and assigns it to the Expiration field.
func (o *WhatsappMessageOrderInfo) SetExpiration(v WhatsappMessageOrderExpiration) {
	o.Expiration = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WhatsappMessageOrderInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageOrderInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WhatsappMessageOrderInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WhatsappMessageOrderInfo) SetDescription(v string) {
	o.Description = &v
}

func (o WhatsappMessageOrderInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CatalogId != nil {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Subtotal != nil {
		toSerialize["subtotal"] = o.Subtotal
	}
	if o.Tax != nil {
		toSerialize["tax"] = o.Tax
	}
	if o.Shipping != nil {
		toSerialize["shipping"] = o.Shipping
	}
	if o.Discount != nil {
		toSerialize["discount"] = o.Discount
	}
	if o.Expiration != nil {
		toSerialize["expiration"] = o.Expiration
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageOrderInfo struct {
	value *WhatsappMessageOrderInfo
	isSet bool
}

func (v NullableWhatsappMessageOrderInfo) Get() *WhatsappMessageOrderInfo {
	return v.value
}

func (v *NullableWhatsappMessageOrderInfo) Set(val *WhatsappMessageOrderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageOrderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageOrderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageOrderInfo(val *WhatsappMessageOrderInfo) *NullableWhatsappMessageOrderInfo {
	return &NullableWhatsappMessageOrderInfo{value: val, isSet: true}
}

func (v NullableWhatsappMessageOrderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageOrderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
