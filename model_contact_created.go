/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// ContactCreated Represents a contact created event. Contains the full contact information that was created.
type ContactCreated struct {
	// Unique ID for the object.
	Id string `json:"id"`
	// Contact's nickname.
	NickName *string `json:"nickName,omitempty"`
	// Contact's real name.
	RealName *string `json:"realName,omitempty"`
	// Unique Phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Two-letter country abbreviation. See [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
	CountryCode *string `json:"countryCode,omitempty"`
	// Full country name.
	CountryName *string `json:"countryName,omitempty"`
	// The contact's email address. If present, the email address must be unique.
	Email *string `json:"email,omitempty"`
	// The source type where the contact was created.
	SourceType *string `json:"sourceType,omitempty"`
	// The source ID where the contact was created.
	SourceId *string `json:"sourceId,omitempty"`
	// The source URL where the contact was created.
	SourceUrl *string `json:"sourceUrl,omitempty"`
	// The time at which the contact last sent a message to your business, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	LastSeen *time.Time `json:"lastSeen,omitempty"`
	// The business phone number that the contact last connected to.
	LastConnectedNumber *string `json:"lastConnectedNumber,omitempty"`
	// The email address of the contact's owner.
	OwnerEmail *string `json:"ownerEmail,omitempty"`
	// Contact's tags.
	Tags []string `json:"tags,omitempty"`
	// The time at which the contact was created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// The time at which the contact was last updated, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	// Whether the contact is blocked.
	Blocked *bool `json:"blocked,omitempty"`
	// Contact's custom attributes as key-value pairs.
	CustomAttributes map[string]map[string]interface{} `json:"customAttributes,omitempty"`
}

// NewContactCreated instantiates a new ContactCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCreated(id string) *ContactCreated {
	this := ContactCreated{}
	this.Id = id
	return &this
}

// NewContactCreatedWithDefaults instantiates a new ContactCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCreatedWithDefaults() *ContactCreated {
	this := ContactCreated{}
	return &this
}

// GetId returns the Id field value
func (o *ContactCreated) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContactCreated) SetId(v string) {
	o.Id = v
}

// GetNickName returns the NickName field value if set, zero value otherwise.
func (o *ContactCreated) GetNickName() string {
	if o == nil || o.NickName == nil {
		var ret string
		return ret
	}
	return *o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetNickNameOk() (*string, bool) {
	if o == nil || o.NickName == nil {
		return nil, false
	}
	return o.NickName, true
}

// HasNickName returns a boolean if a field has been set.
func (o *ContactCreated) HasNickName() bool {
	if o != nil && o.NickName != nil {
		return true
	}

	return false
}

// SetNickName gets a reference to the given string and assigns it to the NickName field.
func (o *ContactCreated) SetNickName(v string) {
	o.NickName = &v
}

// GetRealName returns the RealName field value if set, zero value otherwise.
func (o *ContactCreated) GetRealName() string {
	if o == nil || o.RealName == nil {
		var ret string
		return ret
	}
	return *o.RealName
}

// GetRealNameOk returns a tuple with the RealName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetRealNameOk() (*string, bool) {
	if o == nil || o.RealName == nil {
		return nil, false
	}
	return o.RealName, true
}

// HasRealName returns a boolean if a field has been set.
func (o *ContactCreated) HasRealName() bool {
	if o != nil && o.RealName != nil {
		return true
	}

	return false
}

// SetRealName gets a reference to the given string and assigns it to the RealName field.
func (o *ContactCreated) SetRealName(v string) {
	o.RealName = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *ContactCreated) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *ContactCreated) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *ContactCreated) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *ContactCreated) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *ContactCreated) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *ContactCreated) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *ContactCreated) GetCountryName() string {
	if o == nil || o.CountryName == nil {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetCountryNameOk() (*string, bool) {
	if o == nil || o.CountryName == nil {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *ContactCreated) HasCountryName() bool {
	if o != nil && o.CountryName != nil {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *ContactCreated) SetCountryName(v string) {
	o.CountryName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ContactCreated) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ContactCreated) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ContactCreated) SetEmail(v string) {
	o.Email = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *ContactCreated) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *ContactCreated) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *ContactCreated) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ContactCreated) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ContactCreated) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *ContactCreated) SetSourceId(v string) {
	o.SourceId = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *ContactCreated) GetSourceUrl() string {
	if o == nil || o.SourceUrl == nil {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetSourceUrlOk() (*string, bool) {
	if o == nil || o.SourceUrl == nil {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *ContactCreated) HasSourceUrl() bool {
	if o != nil && o.SourceUrl != nil {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *ContactCreated) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *ContactCreated) GetLastSeen() time.Time {
	if o == nil || o.LastSeen == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetLastSeenOk() (*time.Time, bool) {
	if o == nil || o.LastSeen == nil {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *ContactCreated) HasLastSeen() bool {
	if o != nil && o.LastSeen != nil {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given time.Time and assigns it to the LastSeen field.
func (o *ContactCreated) SetLastSeen(v time.Time) {
	o.LastSeen = &v
}

// GetLastConnectedNumber returns the LastConnectedNumber field value if set, zero value otherwise.
func (o *ContactCreated) GetLastConnectedNumber() string {
	if o == nil || o.LastConnectedNumber == nil {
		var ret string
		return ret
	}
	return *o.LastConnectedNumber
}

// GetLastConnectedNumberOk returns a tuple with the LastConnectedNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetLastConnectedNumberOk() (*string, bool) {
	if o == nil || o.LastConnectedNumber == nil {
		return nil, false
	}
	return o.LastConnectedNumber, true
}

// HasLastConnectedNumber returns a boolean if a field has been set.
func (o *ContactCreated) HasLastConnectedNumber() bool {
	if o != nil && o.LastConnectedNumber != nil {
		return true
	}

	return false
}

// SetLastConnectedNumber gets a reference to the given string and assigns it to the LastConnectedNumber field.
func (o *ContactCreated) SetLastConnectedNumber(v string) {
	o.LastConnectedNumber = &v
}

// GetOwnerEmail returns the OwnerEmail field value if set, zero value otherwise.
func (o *ContactCreated) GetOwnerEmail() string {
	if o == nil || o.OwnerEmail == nil {
		var ret string
		return ret
	}
	return *o.OwnerEmail
}

// GetOwnerEmailOk returns a tuple with the OwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetOwnerEmailOk() (*string, bool) {
	if o == nil || o.OwnerEmail == nil {
		return nil, false
	}
	return o.OwnerEmail, true
}

// HasOwnerEmail returns a boolean if a field has been set.
func (o *ContactCreated) HasOwnerEmail() bool {
	if o != nil && o.OwnerEmail != nil {
		return true
	}

	return false
}

// SetOwnerEmail gets a reference to the given string and assigns it to the OwnerEmail field.
func (o *ContactCreated) SetOwnerEmail(v string) {
	o.OwnerEmail = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ContactCreated) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ContactCreated) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ContactCreated) SetTags(v []string) {
	o.Tags = v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ContactCreated) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ContactCreated) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *ContactCreated) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *ContactCreated) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *ContactCreated) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *ContactCreated) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetBlocked returns the Blocked field value if set, zero value otherwise.
func (o *ContactCreated) GetBlocked() bool {
	if o == nil || o.Blocked == nil {
		var ret bool
		return ret
	}
	return *o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetBlockedOk() (*bool, bool) {
	if o == nil || o.Blocked == nil {
		return nil, false
	}
	return o.Blocked, true
}

// HasBlocked returns a boolean if a field has been set.
func (o *ContactCreated) HasBlocked() bool {
	if o != nil && o.Blocked != nil {
		return true
	}

	return false
}

// SetBlocked gets a reference to the given bool and assigns it to the Blocked field.
func (o *ContactCreated) SetBlocked(v bool) {
	o.Blocked = &v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *ContactCreated) GetCustomAttributes() map[string]map[string]interface{} {
	if o == nil || o.CustomAttributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreated) GetCustomAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.CustomAttributes == nil {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *ContactCreated) HasCustomAttributes() bool {
	if o != nil && o.CustomAttributes != nil {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the CustomAttributes field.
func (o *ContactCreated) SetCustomAttributes(v map[string]map[string]interface{}) {
	o.CustomAttributes = v
}

func (o ContactCreated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.NickName != nil {
		toSerialize["nickName"] = o.NickName
	}
	if o.RealName != nil {
		toSerialize["realName"] = o.RealName
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.CountryName != nil {
		toSerialize["countryName"] = o.CountryName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.SourceId != nil {
		toSerialize["sourceId"] = o.SourceId
	}
	if o.SourceUrl != nil {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	if o.LastSeen != nil {
		toSerialize["lastSeen"] = o.LastSeen
	}
	if o.LastConnectedNumber != nil {
		toSerialize["lastConnectedNumber"] = o.LastConnectedNumber
	}
	if o.OwnerEmail != nil {
		toSerialize["ownerEmail"] = o.OwnerEmail
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if o.Blocked != nil {
		toSerialize["blocked"] = o.Blocked
	}
	if o.CustomAttributes != nil {
		toSerialize["customAttributes"] = o.CustomAttributes
	}
	return json.Marshal(toSerialize)
}

type NullableContactCreated struct {
	value *ContactCreated
	isSet bool
}

func (v NullableContactCreated) Get() *ContactCreated {
	return v.value
}

func (v *NullableContactCreated) Set(val *ContactCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCreated(val *ContactCreated) *NullableContactCreated {
	return &NullableContactCreated{value: val, isSet: true}
}

func (v NullableContactCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


