/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappTemplateStatus The status of a WhatsApp template. - `PENDING`: The template is still under review. Review can take up to 24 hours. - `REJECTED`: The template has been rejected during review process. - `APPROVED`: The template is approved, and you may begin sending it to customers. - `PAUSED`: The template has been paused due to recurring negative feedback from customers. Message templates with this status cannot be sent to customers. See [Template Pausing](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines#template-pausing). - `DISABLED`: The template has been disabled due to recurring negative feedback from customers or for violating one or more of our policies. Message templates with this status cannot be sent to customers. You may be able to edit a disabled message template and request an appeal. See [Appeals](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines#appeals). - `IN_APPEAL`: The template is in appeal. See also [Template Appeals](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines#appeals). - `DELETED`: The template is deleted.
type WhatsappTemplateStatus string

// List of WhatsappTemplateStatus
const (
	WHATSAPPTEMPLATESTATUS_PENDING WhatsappTemplateStatus = "PENDING"
	WHATSAPPTEMPLATESTATUS_REJECTED WhatsappTemplateStatus = "REJECTED"
	WHATSAPPTEMPLATESTATUS_APPROVED WhatsappTemplateStatus = "APPROVED"
	WHATSAPPTEMPLATESTATUS_PAUSED WhatsappTemplateStatus = "PAUSED"
	WHATSAPPTEMPLATESTATUS_DISABLED WhatsappTemplateStatus = "DISABLED"
	WHATSAPPTEMPLATESTATUS_IN_APPEAL WhatsappTemplateStatus = "IN_APPEAL"
	WHATSAPPTEMPLATESTATUS_DELETED WhatsappTemplateStatus = "DELETED"
)

// All allowed values of WhatsappTemplateStatus enum
var AllowedWhatsappTemplateStatusEnumValues = []WhatsappTemplateStatus{
	"PENDING",
	"REJECTED",
	"APPROVED",
	"PAUSED",
	"DISABLED",
	"IN_APPEAL",
	"DELETED",
}

func (v *WhatsappTemplateStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappTemplateStatus(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappTemplateStatusFromValue returns a pointer to a valid WhatsappTemplateStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappTemplateStatusFromValue(v string) (*WhatsappTemplateStatus, error) {
	ev := WhatsappTemplateStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappTemplateStatus: valid values are %v", v, AllowedWhatsappTemplateStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappTemplateStatus) IsValid() bool {
	for _, existing := range AllowedWhatsappTemplateStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappTemplateStatus value
func (v WhatsappTemplateStatus) Ptr() *WhatsappTemplateStatus {
	return &v
}

type NullableWhatsappTemplateStatus struct {
	value *WhatsappTemplateStatus
	isSet bool
}

func (v NullableWhatsappTemplateStatus) Get() *WhatsappTemplateStatus {
	return v.value
}

func (v *NullableWhatsappTemplateStatus) Set(val *WhatsappTemplateStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappTemplateStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappTemplateStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappTemplateStatus(val *WhatsappTemplateStatus) *NullableWhatsappTemplateStatus {
	return &NullableWhatsappTemplateStatus{value: val, isSet: true}
}

func (v NullableWhatsappTemplateStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappTemplateStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

