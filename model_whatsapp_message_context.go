/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageContext Used to mention a specific message you are replying to. The reply can be any message type.
type WhatsappMessageContext struct {
	// Specifies the `wamid` of the message your are replying to. `wamid` is the original message ID on WhatsApp's platform.
	MessageId *string `json:"message_id,omitempty"`
}

// NewWhatsappMessageContext instantiates a new WhatsappMessageContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageContext() *WhatsappMessageContext {
	this := WhatsappMessageContext{}
	return &this
}

// NewWhatsappMessageContextWithDefaults instantiates a new WhatsappMessageContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageContextWithDefaults() *WhatsappMessageContext {
	this := WhatsappMessageContext{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *WhatsappMessageContext) GetMessageId() string {
	if o == nil || o.MessageId == nil {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContext) GetMessageIdOk() (*string, bool) {
	if o == nil || o.MessageId == nil {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *WhatsappMessageContext) HasMessageId() bool {
	if o != nil && o.MessageId != nil {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *WhatsappMessageContext) SetMessageId(v string) {
	o.MessageId = &v
}

func (o WhatsappMessageContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageId != nil {
		toSerialize["message_id"] = o.MessageId
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageContext struct {
	value *WhatsappMessageContext
	isSet bool
}

func (v NullableWhatsappMessageContext) Get() *WhatsappMessageContext {
	return v.value
}

func (v *NullableWhatsappMessageContext) Set(val *WhatsappMessageContext) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageContext) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageContext(val *WhatsappMessageContext) *NullableWhatsappMessageContext {
	return &NullableWhatsappMessageContext{value: val, isSet: true}
}

func (v NullableWhatsappMessageContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


