/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappPhoneNumberQualityRating Quality rating. One of `GREEN`, `YELLOW`, `RED`, or `UNKNOWN`. See also [Phone Number Quality Rating](https://www.facebook.com/business/help/896873687365001). - `GREEN`: High quality. - `YELLOW`: Medium quality. - `RED`: Low quality. - `UNKNOWN`: Unknown quality.
type WhatsappPhoneNumberQualityRating string

// List of WhatsappPhoneNumberQualityRating
const (
	WHATSAPPPHONENUMBERQUALITYRATING_GREEN WhatsappPhoneNumberQualityRating = "GREEN"
	WHATSAPPPHONENUMBERQUALITYRATING_YELLOW WhatsappPhoneNumberQualityRating = "YELLOW"
	WHATSAPPPHONENUMBERQUALITYRATING_RED WhatsappPhoneNumberQualityRating = "RED"
	WHATSAPPPHONENUMBERQUALITYRATING_UNKNOWN WhatsappPhoneNumberQualityRating = "UNKNOWN"
)

// All allowed values of WhatsappPhoneNumberQualityRating enum
var AllowedWhatsappPhoneNumberQualityRatingEnumValues = []WhatsappPhoneNumberQualityRating{
	"GREEN",
	"YELLOW",
	"RED",
	"UNKNOWN",
}

func (v *WhatsappPhoneNumberQualityRating) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappPhoneNumberQualityRating(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappPhoneNumberQualityRatingFromValue returns a pointer to a valid WhatsappPhoneNumberQualityRating
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappPhoneNumberQualityRatingFromValue(v string) (*WhatsappPhoneNumberQualityRating, error) {
	ev := WhatsappPhoneNumberQualityRating(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappPhoneNumberQualityRating: valid values are %v", v, AllowedWhatsappPhoneNumberQualityRatingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappPhoneNumberQualityRating) IsValid() bool {
	for _, existing := range AllowedWhatsappPhoneNumberQualityRatingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappPhoneNumberQualityRating value
func (v WhatsappPhoneNumberQualityRating) Ptr() *WhatsappPhoneNumberQualityRating {
	return &v
}

type NullableWhatsappPhoneNumberQualityRating struct {
	value *WhatsappPhoneNumberQualityRating
	isSet bool
}

func (v NullableWhatsappPhoneNumberQualityRating) Get() *WhatsappPhoneNumberQualityRating {
	return v.value
}

func (v *NullableWhatsappPhoneNumberQualityRating) Set(val *WhatsappPhoneNumberQualityRating) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPhoneNumberQualityRating) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPhoneNumberQualityRating) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPhoneNumberQualityRating(val *WhatsappPhoneNumberQualityRating) *NullableWhatsappPhoneNumberQualityRating {
	return &NullableWhatsappPhoneNumberQualityRating{value: val, isSet: true}
}

func (v NullableWhatsappPhoneNumberQualityRating) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPhoneNumberQualityRating) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

