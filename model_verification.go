/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// Verification struct for Verification
type Verification struct {
	// ID of the verification.
	Id string `json:"id"`
	Status *VerificationStatus `json:"status,omitempty"`
	// Recipient of the verification.
	To *string `json:"to,omitempty"`
	Channel *VerificationChannel `json:"channel,omitempty"`
	// The time at which this verification was sent, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	SendTime *time.Time `json:"sendTime,omitempty"`
	// Total price of this verification.
	TotalPrice *float64 `json:"totalPrice,omitempty"`
	// Price currency. [ISO 4217 currency code](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *string `json:"currency,omitempty"`
	// Whether sms fallback is enabled or not. Applicable when `channel` is `whatsapp`. If enabled, we will try to send the verification code via sms when the WhatsApp message is failed.
	SmsFallbackEnabled *bool `json:"smsFallbackEnabled,omitempty"`
	SmsFallback *VerificationFallback `json:"smsFallback,omitempty"`
	// A unique (recommended) string to reference the object. This can be an order number or similar, and can be used to reconcile the object with your internal systems.
	ExternalId *string `json:"externalId,omitempty"`
}

// NewVerification instantiates a new Verification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerification(id string) *Verification {
	this := Verification{}
	this.Id = id
	return &this
}

// NewVerificationWithDefaults instantiates a new Verification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationWithDefaults() *Verification {
	this := Verification{}
	return &this
}

// GetId returns the Id field value
func (o *Verification) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Verification) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Verification) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Verification) GetStatus() VerificationStatus {
	if o == nil || o.Status == nil {
		var ret VerificationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetStatusOk() (*VerificationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Verification) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given VerificationStatus and assigns it to the Status field.
func (o *Verification) SetStatus(v VerificationStatus) {
	o.Status = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *Verification) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *Verification) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *Verification) SetTo(v string) {
	o.To = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *Verification) GetChannel() VerificationChannel {
	if o == nil || o.Channel == nil {
		var ret VerificationChannel
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetChannelOk() (*VerificationChannel, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *Verification) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given VerificationChannel and assigns it to the Channel field.
func (o *Verification) SetChannel(v VerificationChannel) {
	o.Channel = &v
}

// GetSendTime returns the SendTime field value if set, zero value otherwise.
func (o *Verification) GetSendTime() time.Time {
	if o == nil || o.SendTime == nil {
		var ret time.Time
		return ret
	}
	return *o.SendTime
}

// GetSendTimeOk returns a tuple with the SendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetSendTimeOk() (*time.Time, bool) {
	if o == nil || o.SendTime == nil {
		return nil, false
	}
	return o.SendTime, true
}

// HasSendTime returns a boolean if a field has been set.
func (o *Verification) HasSendTime() bool {
	if o != nil && o.SendTime != nil {
		return true
	}

	return false
}

// SetSendTime gets a reference to the given time.Time and assigns it to the SendTime field.
func (o *Verification) SetSendTime(v time.Time) {
	o.SendTime = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *Verification) GetTotalPrice() float64 {
	if o == nil || o.TotalPrice == nil {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetTotalPriceOk() (*float64, bool) {
	if o == nil || o.TotalPrice == nil {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *Verification) HasTotalPrice() bool {
	if o != nil && o.TotalPrice != nil {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *Verification) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Verification) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Verification) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Verification) SetCurrency(v string) {
	o.Currency = &v
}

// GetSmsFallbackEnabled returns the SmsFallbackEnabled field value if set, zero value otherwise.
func (o *Verification) GetSmsFallbackEnabled() bool {
	if o == nil || o.SmsFallbackEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SmsFallbackEnabled
}

// GetSmsFallbackEnabledOk returns a tuple with the SmsFallbackEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetSmsFallbackEnabledOk() (*bool, bool) {
	if o == nil || o.SmsFallbackEnabled == nil {
		return nil, false
	}
	return o.SmsFallbackEnabled, true
}

// HasSmsFallbackEnabled returns a boolean if a field has been set.
func (o *Verification) HasSmsFallbackEnabled() bool {
	if o != nil && o.SmsFallbackEnabled != nil {
		return true
	}

	return false
}

// SetSmsFallbackEnabled gets a reference to the given bool and assigns it to the SmsFallbackEnabled field.
func (o *Verification) SetSmsFallbackEnabled(v bool) {
	o.SmsFallbackEnabled = &v
}

// GetSmsFallback returns the SmsFallback field value if set, zero value otherwise.
func (o *Verification) GetSmsFallback() VerificationFallback {
	if o == nil || o.SmsFallback == nil {
		var ret VerificationFallback
		return ret
	}
	return *o.SmsFallback
}

// GetSmsFallbackOk returns a tuple with the SmsFallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetSmsFallbackOk() (*VerificationFallback, bool) {
	if o == nil || o.SmsFallback == nil {
		return nil, false
	}
	return o.SmsFallback, true
}

// HasSmsFallback returns a boolean if a field has been set.
func (o *Verification) HasSmsFallback() bool {
	if o != nil && o.SmsFallback != nil {
		return true
	}

	return false
}

// SetSmsFallback gets a reference to the given VerificationFallback and assigns it to the SmsFallback field.
func (o *Verification) SetSmsFallback(v VerificationFallback) {
	o.SmsFallback = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Verification) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Verification) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *Verification) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *Verification) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o Verification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.SendTime != nil {
		toSerialize["sendTime"] = o.SendTime
	}
	if o.TotalPrice != nil {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.SmsFallbackEnabled != nil {
		toSerialize["smsFallbackEnabled"] = o.SmsFallbackEnabled
	}
	if o.SmsFallback != nil {
		toSerialize["smsFallback"] = o.SmsFallback
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	return json.Marshal(toSerialize)
}

type NullableVerification struct {
	value *Verification
	isSet bool
}

func (v NullableVerification) Get() *Verification {
	return v.value
}

func (v *NullableVerification) Set(val *Verification) {
	v.value = val
	v.isSet = true
}

func (v NullableVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerification(val *Verification) *NullableVerification {
	return &NullableVerification{value: val, isSet: true}
}

func (v NullableVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


