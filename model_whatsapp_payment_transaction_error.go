/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappPaymentTransactionError The payment error details might not be available for all payments attempts.
type WhatsappPaymentTransactionError struct {
	// Describes the payment failure reason that generated by payment gateway and Meta transmits this to partners.
	Code string `json:"code"`
	// Describes the payment failure reason in plain text that is generated by payment gateway and Meta transmits this to partners.
	Reason string `json:"reason"`
}

// NewWhatsappPaymentTransactionError instantiates a new WhatsappPaymentTransactionError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappPaymentTransactionError(code string, reason string) *WhatsappPaymentTransactionError {
	this := WhatsappPaymentTransactionError{}
	this.Code = code
	this.Reason = reason
	return &this
}

// NewWhatsappPaymentTransactionErrorWithDefaults instantiates a new WhatsappPaymentTransactionError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappPaymentTransactionErrorWithDefaults() *WhatsappPaymentTransactionError {
	this := WhatsappPaymentTransactionError{}
	return &this
}

// GetCode returns the Code field value
func (o *WhatsappPaymentTransactionError) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *WhatsappPaymentTransactionError) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *WhatsappPaymentTransactionError) SetCode(v string) {
	o.Code = v
}

// GetReason returns the Reason field value
func (o *WhatsappPaymentTransactionError) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *WhatsappPaymentTransactionError) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *WhatsappPaymentTransactionError) SetReason(v string) {
	o.Reason = v
}

func (o WhatsappPaymentTransactionError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappPaymentTransactionError struct {
	value *WhatsappPaymentTransactionError
	isSet bool
}

func (v NullableWhatsappPaymentTransactionError) Get() *WhatsappPaymentTransactionError {
	return v.value
}

func (v *NullableWhatsappPaymentTransactionError) Set(val *WhatsappPaymentTransactionError) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPaymentTransactionError) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPaymentTransactionError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPaymentTransactionError(val *WhatsappPaymentTransactionError) *NullableWhatsappPaymentTransactionError {
	return &NullableWhatsappPaymentTransactionError{value: val, isSet: true}
}

func (v NullableWhatsappPaymentTransactionError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPaymentTransactionError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


