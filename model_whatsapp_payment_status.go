/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappPaymentStatus Status of this payment. - `captured`: Indicates the payment is successfully completed. - `pending`: Indicates the user attempted but yet to receive success transactions signal.
type WhatsappPaymentStatus string

// List of WhatsappPaymentStatus
const (
	WHATSAPPPAYMENTSTATUS_CAPTURED WhatsappPaymentStatus = "captured"
	WHATSAPPPAYMENTSTATUS_PENDING  WhatsappPaymentStatus = "pending"
)

// All allowed values of WhatsappPaymentStatus enum
var AllowedWhatsappPaymentStatusEnumValues = []WhatsappPaymentStatus{
	"captured",
	"pending",
}

func (v *WhatsappPaymentStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappPaymentStatus(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappPaymentStatusFromValue returns a pointer to a valid WhatsappPaymentStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappPaymentStatusFromValue(v string) (*WhatsappPaymentStatus, error) {
	ev := WhatsappPaymentStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappPaymentStatus: valid values are %v", v, AllowedWhatsappPaymentStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappPaymentStatus) IsValid() bool {
	for _, existing := range AllowedWhatsappPaymentStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappPaymentStatus value
func (v WhatsappPaymentStatus) Ptr() *WhatsappPaymentStatus {
	return &v
}

type NullableWhatsappPaymentStatus struct {
	value *WhatsappPaymentStatus
	isSet bool
}

func (v NullableWhatsappPaymentStatus) Get() *WhatsappPaymentStatus {
	return v.value
}

func (v *NullableWhatsappPaymentStatus) Set(val *WhatsappPaymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPaymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPaymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPaymentStatus(val *WhatsappPaymentStatus) *NullableWhatsappPaymentStatus {
	return &NullableWhatsappPaymentStatus{value: val, isSet: true}
}

func (v NullableWhatsappPaymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPaymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
