/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappCallingRequest struct for WhatsappCallingRequest
type WhatsappCallingRequest struct {
	// The WhatsApp Business phone number ID.
	PhoneId *string `json:"phoneId,omitempty"`
	// The caller's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. Required for connect operations when phoneId is empty.
	From *string `json:"from,omitempty"`
	// The callee's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. Required for outbound call connections.
	To *string `json:"to,omitempty"`
	// The WhatsApp call ID. Required for inbound call operations. This ID is received from the Call Connect webhook when a WhatsApp user initiates the call.
	Wacid *string `json:"wacid,omitempty"`
	// The SDP type. For pre-accept and accept operations, must be \"answer\".
	SdpType *string `json:"sdpType,omitempty"`
	// The Session Description Protocol (SDP) information compliant with [RFC 8866](https://datatracker.ietf.org/doc/html/rfc8866). Required for pre-accept and accept operations. Contains media session parameters for the WebRTC connection.
	Sdp *string `json:"sdp,omitempty"`
}

// NewWhatsappCallingRequest instantiates a new WhatsappCallingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappCallingRequest() *WhatsappCallingRequest {
	this := WhatsappCallingRequest{}
	return &this
}

// NewWhatsappCallingRequestWithDefaults instantiates a new WhatsappCallingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappCallingRequestWithDefaults() *WhatsappCallingRequest {
	this := WhatsappCallingRequest{}
	return &this
}

// GetPhoneId returns the PhoneId field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetPhoneId() string {
	if o == nil || o.PhoneId == nil {
		var ret string
		return ret
	}
	return *o.PhoneId
}

// GetPhoneIdOk returns a tuple with the PhoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetPhoneIdOk() (*string, bool) {
	if o == nil || o.PhoneId == nil {
		return nil, false
	}
	return o.PhoneId, true
}

// HasPhoneId returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasPhoneId() bool {
	if o != nil && o.PhoneId != nil {
		return true
	}

	return false
}

// SetPhoneId gets a reference to the given string and assigns it to the PhoneId field.
func (o *WhatsappCallingRequest) SetPhoneId(v string) {
	o.PhoneId = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *WhatsappCallingRequest) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *WhatsappCallingRequest) SetTo(v string) {
	o.To = &v
}

// GetWacid returns the Wacid field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetWacid() string {
	if o == nil || o.Wacid == nil {
		var ret string
		return ret
	}
	return *o.Wacid
}

// GetWacidOk returns a tuple with the Wacid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetWacidOk() (*string, bool) {
	if o == nil || o.Wacid == nil {
		return nil, false
	}
	return o.Wacid, true
}

// HasWacid returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasWacid() bool {
	if o != nil && o.Wacid != nil {
		return true
	}

	return false
}

// SetWacid gets a reference to the given string and assigns it to the Wacid field.
func (o *WhatsappCallingRequest) SetWacid(v string) {
	o.Wacid = &v
}

// GetSdpType returns the SdpType field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetSdpType() string {
	if o == nil || o.SdpType == nil {
		var ret string
		return ret
	}
	return *o.SdpType
}

// GetSdpTypeOk returns a tuple with the SdpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetSdpTypeOk() (*string, bool) {
	if o == nil || o.SdpType == nil {
		return nil, false
	}
	return o.SdpType, true
}

// HasSdpType returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasSdpType() bool {
	if o != nil && o.SdpType != nil {
		return true
	}

	return false
}

// SetSdpType gets a reference to the given string and assigns it to the SdpType field.
func (o *WhatsappCallingRequest) SetSdpType(v string) {
	o.SdpType = &v
}

// GetSdp returns the Sdp field value if set, zero value otherwise.
func (o *WhatsappCallingRequest) GetSdp() string {
	if o == nil || o.Sdp == nil {
		var ret string
		return ret
	}
	return *o.Sdp
}

// GetSdpOk returns a tuple with the Sdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappCallingRequest) GetSdpOk() (*string, bool) {
	if o == nil || o.Sdp == nil {
		return nil, false
	}
	return o.Sdp, true
}

// HasSdp returns a boolean if a field has been set.
func (o *WhatsappCallingRequest) HasSdp() bool {
	if o != nil && o.Sdp != nil {
		return true
	}

	return false
}

// SetSdp gets a reference to the given string and assigns it to the Sdp field.
func (o *WhatsappCallingRequest) SetSdp(v string) {
	o.Sdp = &v
}

func (o WhatsappCallingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PhoneId != nil {
		toSerialize["phoneId"] = o.PhoneId
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Wacid != nil {
		toSerialize["wacid"] = o.Wacid
	}
	if o.SdpType != nil {
		toSerialize["sdpType"] = o.SdpType
	}
	if o.Sdp != nil {
		toSerialize["sdp"] = o.Sdp
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappCallingRequest struct {
	value *WhatsappCallingRequest
	isSet bool
}

func (v NullableWhatsappCallingRequest) Get() *WhatsappCallingRequest {
	return v.value
}

func (v *NullableWhatsappCallingRequest) Set(val *WhatsappCallingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappCallingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappCallingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappCallingRequest(val *WhatsappCallingRequest) *NullableWhatsappCallingRequest {
	return &NullableWhatsappCallingRequest{value: val, isSet: true}
}

func (v NullableWhatsappCallingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappCallingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


