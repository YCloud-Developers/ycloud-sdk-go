/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageContext Message context.
type WhatsappInboundMessageContext struct {
	// **Added to Webhooks if message was forwarded.**  Set to `true` if the received message has been forwarded.
	Forwarded *bool `json:"forwarded,omitempty"`
	// **Added to Webhooks if message has been frequently forwarded.**  Set to `true` if the received message has been forwarded more than five times.
	FrequentlyForwarded *bool `json:"frequently_forwarded,omitempty"`
	// **Added to Webhooks if message is an inbound reply to a sent message.**  The WhatsApp ID (a phone number without the '+' prefix) of the sender of the sent message.
	From *string `json:"from,omitempty"`
	// **Optional.**  The `wamid` for the sent message for an inbound reply. `wamid` is the original message ID on WhatsApp's platform.
	Id *string `json:"id,omitempty"`
	ReferredProduct *WhatsappInboundMessageReferredProduct `json:"referred_product,omitempty"`
}

// NewWhatsappInboundMessageContext instantiates a new WhatsappInboundMessageContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageContext() *WhatsappInboundMessageContext {
	this := WhatsappInboundMessageContext{}
	return &this
}

// NewWhatsappInboundMessageContextWithDefaults instantiates a new WhatsappInboundMessageContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageContextWithDefaults() *WhatsappInboundMessageContext {
	this := WhatsappInboundMessageContext{}
	return &this
}

// GetForwarded returns the Forwarded field value if set, zero value otherwise.
func (o *WhatsappInboundMessageContext) GetForwarded() bool {
	if o == nil || o.Forwarded == nil {
		var ret bool
		return ret
	}
	return *o.Forwarded
}

// GetForwardedOk returns a tuple with the Forwarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageContext) GetForwardedOk() (*bool, bool) {
	if o == nil || o.Forwarded == nil {
		return nil, false
	}
	return o.Forwarded, true
}

// HasForwarded returns a boolean if a field has been set.
func (o *WhatsappInboundMessageContext) HasForwarded() bool {
	if o != nil && o.Forwarded != nil {
		return true
	}

	return false
}

// SetForwarded gets a reference to the given bool and assigns it to the Forwarded field.
func (o *WhatsappInboundMessageContext) SetForwarded(v bool) {
	o.Forwarded = &v
}

// GetFrequentlyForwarded returns the FrequentlyForwarded field value if set, zero value otherwise.
func (o *WhatsappInboundMessageContext) GetFrequentlyForwarded() bool {
	if o == nil || o.FrequentlyForwarded == nil {
		var ret bool
		return ret
	}
	return *o.FrequentlyForwarded
}

// GetFrequentlyForwardedOk returns a tuple with the FrequentlyForwarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageContext) GetFrequentlyForwardedOk() (*bool, bool) {
	if o == nil || o.FrequentlyForwarded == nil {
		return nil, false
	}
	return o.FrequentlyForwarded, true
}

// HasFrequentlyForwarded returns a boolean if a field has been set.
func (o *WhatsappInboundMessageContext) HasFrequentlyForwarded() bool {
	if o != nil && o.FrequentlyForwarded != nil {
		return true
	}

	return false
}

// SetFrequentlyForwarded gets a reference to the given bool and assigns it to the FrequentlyForwarded field.
func (o *WhatsappInboundMessageContext) SetFrequentlyForwarded(v bool) {
	o.FrequentlyForwarded = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *WhatsappInboundMessageContext) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageContext) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *WhatsappInboundMessageContext) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *WhatsappInboundMessageContext) SetFrom(v string) {
	o.From = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsappInboundMessageContext) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageContext) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsappInboundMessageContext) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WhatsappInboundMessageContext) SetId(v string) {
	o.Id = &v
}

// GetReferredProduct returns the ReferredProduct field value if set, zero value otherwise.
func (o *WhatsappInboundMessageContext) GetReferredProduct() WhatsappInboundMessageReferredProduct {
	if o == nil || o.ReferredProduct == nil {
		var ret WhatsappInboundMessageReferredProduct
		return ret
	}
	return *o.ReferredProduct
}

// GetReferredProductOk returns a tuple with the ReferredProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageContext) GetReferredProductOk() (*WhatsappInboundMessageReferredProduct, bool) {
	if o == nil || o.ReferredProduct == nil {
		return nil, false
	}
	return o.ReferredProduct, true
}

// HasReferredProduct returns a boolean if a field has been set.
func (o *WhatsappInboundMessageContext) HasReferredProduct() bool {
	if o != nil && o.ReferredProduct != nil {
		return true
	}

	return false
}

// SetReferredProduct gets a reference to the given WhatsappInboundMessageReferredProduct and assigns it to the ReferredProduct field.
func (o *WhatsappInboundMessageContext) SetReferredProduct(v WhatsappInboundMessageReferredProduct) {
	o.ReferredProduct = &v
}

func (o WhatsappInboundMessageContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Forwarded != nil {
		toSerialize["forwarded"] = o.Forwarded
	}
	if o.FrequentlyForwarded != nil {
		toSerialize["frequently_forwarded"] = o.FrequentlyForwarded
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ReferredProduct != nil {
		toSerialize["referred_product"] = o.ReferredProduct
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageContext struct {
	value *WhatsappInboundMessageContext
	isSet bool
}

func (v NullableWhatsappInboundMessageContext) Get() *WhatsappInboundMessageContext {
	return v.value
}

func (v *NullableWhatsappInboundMessageContext) Set(val *WhatsappInboundMessageContext) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageContext) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageContext(val *WhatsappInboundMessageContext) *NullableWhatsappInboundMessageContext {
	return &NullableWhatsappInboundMessageContext{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


