/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMedia Represents a WhatsApp media object that has been uploaded via the media upload API.
type WhatsappMedia struct {
	// Unique identifier for the uploaded media. This ID can be used in subsequent message requests.
	Id *string `json:"id,omitempty"`
}

// NewWhatsappMedia instantiates a new WhatsappMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMedia() *WhatsappMedia {
	this := WhatsappMedia{}
	return &this
}

// NewWhatsappMediaWithDefaults instantiates a new WhatsappMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMediaWithDefaults() *WhatsappMedia {
	this := WhatsappMedia{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsappMedia) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMedia) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsappMedia) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WhatsappMedia) SetId(v string) {
	o.Id = &v
}

func (o WhatsappMedia) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMedia struct {
	value *WhatsappMedia
	isSet bool
}

func (v NullableWhatsappMedia) Get() *WhatsappMedia {
	return v.value
}

func (v *NullableWhatsappMedia) Set(val *WhatsappMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMedia(val *WhatsappMedia) *NullableWhatsappMedia {
	return &NullableWhatsappMedia{value: val, isSet: true}
}

func (v NullableWhatsappMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


