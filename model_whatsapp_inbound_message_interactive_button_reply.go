/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageInteractiveButtonReply Sent when a customer clicks a button. Returned when `type` is `button_reply`.
type WhatsappInboundMessageInteractiveButtonReply struct {
	// Unique ID of the clicked button.
	Id *string `json:"id,omitempty"`
	// Title of a button.
	Title *string `json:"title,omitempty"`
}

// NewWhatsappInboundMessageInteractiveButtonReply instantiates a new WhatsappInboundMessageInteractiveButtonReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageInteractiveButtonReply() *WhatsappInboundMessageInteractiveButtonReply {
	this := WhatsappInboundMessageInteractiveButtonReply{}
	return &this
}

// NewWhatsappInboundMessageInteractiveButtonReplyWithDefaults instantiates a new WhatsappInboundMessageInteractiveButtonReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageInteractiveButtonReplyWithDefaults() *WhatsappInboundMessageInteractiveButtonReply {
	this := WhatsappInboundMessageInteractiveButtonReply{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractiveButtonReply) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractiveButtonReply) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractiveButtonReply) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WhatsappInboundMessageInteractiveButtonReply) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WhatsappInboundMessageInteractiveButtonReply) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageInteractiveButtonReply) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WhatsappInboundMessageInteractiveButtonReply) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WhatsappInboundMessageInteractiveButtonReply) SetTitle(v string) {
	o.Title = &v
}

func (o WhatsappInboundMessageInteractiveButtonReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageInteractiveButtonReply struct {
	value *WhatsappInboundMessageInteractiveButtonReply
	isSet bool
}

func (v NullableWhatsappInboundMessageInteractiveButtonReply) Get() *WhatsappInboundMessageInteractiveButtonReply {
	return v.value
}

func (v *NullableWhatsappInboundMessageInteractiveButtonReply) Set(val *WhatsappInboundMessageInteractiveButtonReply) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageInteractiveButtonReply) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageInteractiveButtonReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageInteractiveButtonReply(val *WhatsappInboundMessageInteractiveButtonReply) *NullableWhatsappInboundMessageInteractiveButtonReply {
	return &NullableWhatsappInboundMessageInteractiveButtonReply{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageInteractiveButtonReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageInteractiveButtonReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


