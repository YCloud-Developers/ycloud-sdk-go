/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageInteractiveHeader Required for type `product_list`. Optional for other types.
type WhatsappMessageInteractiveHeader struct {
	// **Required.** The header type you would like to use. - `text`: Used for List Messages, Reply Buttons, and Multi-Product Messages. - `video`: Used for Reply Buttons. - `image`: Used for Reply Buttons. - `document`: Used for Reply Buttons.
	Type *string `json:"type,omitempty"`
	// Text for the header. Formatting allows emojis, but not markdown.
	Text *string `json:"text,omitempty"`
	Image *WhatsappMessageMedia `json:"image,omitempty"`
	Video *WhatsappMessageMedia `json:"video,omitempty"`
	Document *WhatsappMessageMedia `json:"document,omitempty"`
}

// NewWhatsappMessageInteractiveHeader instantiates a new WhatsappMessageInteractiveHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageInteractiveHeader() *WhatsappMessageInteractiveHeader {
	this := WhatsappMessageInteractiveHeader{}
	return &this
}

// NewWhatsappMessageInteractiveHeaderWithDefaults instantiates a new WhatsappMessageInteractiveHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageInteractiveHeaderWithDefaults() *WhatsappMessageInteractiveHeader {
	this := WhatsappMessageInteractiveHeader{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveHeader) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveHeader) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveHeader) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsappMessageInteractiveHeader) SetType(v string) {
	o.Type = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveHeader) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveHeader) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveHeader) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *WhatsappMessageInteractiveHeader) SetText(v string) {
	o.Text = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveHeader) GetImage() WhatsappMessageMedia {
	if o == nil || o.Image == nil {
		var ret WhatsappMessageMedia
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveHeader) GetImageOk() (*WhatsappMessageMedia, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveHeader) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given WhatsappMessageMedia and assigns it to the Image field.
func (o *WhatsappMessageInteractiveHeader) SetImage(v WhatsappMessageMedia) {
	o.Image = &v
}

// GetVideo returns the Video field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveHeader) GetVideo() WhatsappMessageMedia {
	if o == nil || o.Video == nil {
		var ret WhatsappMessageMedia
		return ret
	}
	return *o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveHeader) GetVideoOk() (*WhatsappMessageMedia, bool) {
	if o == nil || o.Video == nil {
		return nil, false
	}
	return o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveHeader) HasVideo() bool {
	if o != nil && o.Video != nil {
		return true
	}

	return false
}

// SetVideo gets a reference to the given WhatsappMessageMedia and assigns it to the Video field.
func (o *WhatsappMessageInteractiveHeader) SetVideo(v WhatsappMessageMedia) {
	o.Video = &v
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveHeader) GetDocument() WhatsappMessageMedia {
	if o == nil || o.Document == nil {
		var ret WhatsappMessageMedia
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveHeader) GetDocumentOk() (*WhatsappMessageMedia, bool) {
	if o == nil || o.Document == nil {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveHeader) HasDocument() bool {
	if o != nil && o.Document != nil {
		return true
	}

	return false
}

// SetDocument gets a reference to the given WhatsappMessageMedia and assigns it to the Document field.
func (o *WhatsappMessageInteractiveHeader) SetDocument(v WhatsappMessageMedia) {
	o.Document = &v
}

func (o WhatsappMessageInteractiveHeader) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Video != nil {
		toSerialize["video"] = o.Video
	}
	if o.Document != nil {
		toSerialize["document"] = o.Document
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageInteractiveHeader struct {
	value *WhatsappMessageInteractiveHeader
	isSet bool
}

func (v NullableWhatsappMessageInteractiveHeader) Get() *WhatsappMessageInteractiveHeader {
	return v.value
}

func (v *NullableWhatsappMessageInteractiveHeader) Set(val *WhatsappMessageInteractiveHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageInteractiveHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageInteractiveHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageInteractiveHeader(val *WhatsappMessageInteractiveHeader) *NullableWhatsappMessageInteractiveHeader {
	return &NullableWhatsappMessageInteractiveHeader{value: val, isSet: true}
}

func (v NullableWhatsappMessageInteractiveHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageInteractiveHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


