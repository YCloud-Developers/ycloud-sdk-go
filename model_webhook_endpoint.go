/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// WebhookEndpoint struct for WebhookEndpoint
type WebhookEndpoint struct {
	// Unique ID for the object.
	Id string `json:"id"`
	// The URL of the webhook endpoint.
	Url *string `json:"url,omitempty"`
	// The list of events to enable for this endpoint.
	EnabledEvents []string `json:"enabledEvents,omitempty"`
	// Optional configuration for event properties in webhook payloads. Specifies which properties should be included for specific event types. When `enabledEvents` contains `contact.attributes_changed`, this field is required and must contain at least one event property configuration for that event type.
	EventProperties []EventProperty `json:"eventProperties,omitempty"`
	// An optional description of what the webhook is used for.
	Description *string `json:"description,omitempty"`
	Status *WebhookEndpointStatus `json:"status,omitempty"`
	// The endpoint's secret, used to generate webhook signatures.
	Secret *string `json:"secret,omitempty"`
	// The time at which this object was created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// The time at which this object was updated, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewWebhookEndpoint instantiates a new WebhookEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEndpoint(id string) *WebhookEndpoint {
	this := WebhookEndpoint{}
	this.Id = id
	return &this
}

// NewWebhookEndpointWithDefaults instantiates a new WebhookEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEndpointWithDefaults() *WebhookEndpoint {
	this := WebhookEndpoint{}
	return &this
}

// GetId returns the Id field value
func (o *WebhookEndpoint) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookEndpoint) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WebhookEndpoint) SetUrl(v string) {
	o.Url = &v
}

// GetEnabledEvents returns the EnabledEvents field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetEnabledEvents() []string {
	if o == nil || o.EnabledEvents == nil {
		var ret []string
		return ret
	}
	return o.EnabledEvents
}

// GetEnabledEventsOk returns a tuple with the EnabledEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetEnabledEventsOk() ([]string, bool) {
	if o == nil || o.EnabledEvents == nil {
		return nil, false
	}
	return o.EnabledEvents, true
}

// HasEnabledEvents returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasEnabledEvents() bool {
	if o != nil && o.EnabledEvents != nil {
		return true
	}

	return false
}

// SetEnabledEvents gets a reference to the given []string and assigns it to the EnabledEvents field.
func (o *WebhookEndpoint) SetEnabledEvents(v []string) {
	o.EnabledEvents = v
}

// GetEventProperties returns the EventProperties field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetEventProperties() []EventProperty {
	if o == nil || o.EventProperties == nil {
		var ret []EventProperty
		return ret
	}
	return o.EventProperties
}

// GetEventPropertiesOk returns a tuple with the EventProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetEventPropertiesOk() ([]EventProperty, bool) {
	if o == nil || o.EventProperties == nil {
		return nil, false
	}
	return o.EventProperties, true
}

// HasEventProperties returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasEventProperties() bool {
	if o != nil && o.EventProperties != nil {
		return true
	}

	return false
}

// SetEventProperties gets a reference to the given []EventProperty and assigns it to the EventProperties field.
func (o *WebhookEndpoint) SetEventProperties(v []EventProperty) {
	o.EventProperties = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebhookEndpoint) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetStatus() WebhookEndpointStatus {
	if o == nil || o.Status == nil {
		var ret WebhookEndpointStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetStatusOk() (*WebhookEndpointStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WebhookEndpointStatus and assigns it to the Status field.
func (o *WebhookEndpoint) SetStatus(v WebhookEndpointStatus) {
	o.Status = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *WebhookEndpoint) SetSecret(v string) {
	o.Secret = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *WebhookEndpoint) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *WebhookEndpoint) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o WebhookEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.EnabledEvents != nil {
		toSerialize["enabledEvents"] = o.EnabledEvents
	}
	if o.EventProperties != nil {
		toSerialize["eventProperties"] = o.EventProperties
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookEndpoint struct {
	value *WebhookEndpoint
	isSet bool
}

func (v NullableWebhookEndpoint) Get() *WebhookEndpoint {
	return v.value
}

func (v *NullableWebhookEndpoint) Set(val *WebhookEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEndpoint(val *WebhookEndpoint) *NullableWebhookEndpoint {
	return &NullableWebhookEndpoint{value: val, isSet: true}
}

func (v NullableWebhookEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


