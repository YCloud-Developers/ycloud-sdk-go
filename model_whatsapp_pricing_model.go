/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappPricingModel WhatsApp pricing model. - `PMP`: Per-message pricing applies. - `CBP`: Conversation-based pricing applies.
type WhatsappPricingModel string

// List of WhatsappPricingModel
const (
	WHATSAPPPRICINGMODEL_PMP WhatsappPricingModel = "PMP"
	WHATSAPPPRICINGMODEL_CBP WhatsappPricingModel = "CBP"
)

// All allowed values of WhatsappPricingModel enum
var AllowedWhatsappPricingModelEnumValues = []WhatsappPricingModel{
	"PMP",
	"CBP",
}

func (v *WhatsappPricingModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappPricingModel(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappPricingModelFromValue returns a pointer to a valid WhatsappPricingModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappPricingModelFromValue(v string) (*WhatsappPricingModel, error) {
	ev := WhatsappPricingModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappPricingModel: valid values are %v", v, AllowedWhatsappPricingModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappPricingModel) IsValid() bool {
	for _, existing := range AllowedWhatsappPricingModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappPricingModel value
func (v WhatsappPricingModel) Ptr() *WhatsappPricingModel {
	return &v
}

type NullableWhatsappPricingModel struct {
	value *WhatsappPricingModel
	isSet bool
}

func (v NullableWhatsappPricingModel) Get() *WhatsappPricingModel {
	return v.value
}

func (v *NullableWhatsappPricingModel) Set(val *WhatsappPricingModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappPricingModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappPricingModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappPricingModel(val *WhatsappPricingModel) *NullableWhatsappPricingModel {
	return &NullableWhatsappPricingModel{value: val, isSet: true}
}

func (v NullableWhatsappPricingModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappPricingModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

