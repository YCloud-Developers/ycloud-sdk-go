/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappFlowValidationErrorPointersInner struct for WhatsappFlowValidationErrorPointersInner
type WhatsappFlowValidationErrorPointersInner struct {
	// Start line of the error.
	LineStart *int32 `json:"lineStart,omitempty"`
	// End line of the error.
	LineEnd *int32 `json:"lineEnd,omitempty"`
	// Start column of the error.
	ColumnStart *int32 `json:"columnStart,omitempty"`
	// End column of the error.
	ColumnEnd *int32 `json:"columnEnd,omitempty"`
	// Path to the error location.
	Path *string `json:"path,omitempty"`
}

// NewWhatsappFlowValidationErrorPointersInner instantiates a new WhatsappFlowValidationErrorPointersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappFlowValidationErrorPointersInner() *WhatsappFlowValidationErrorPointersInner {
	this := WhatsappFlowValidationErrorPointersInner{}
	return &this
}

// NewWhatsappFlowValidationErrorPointersInnerWithDefaults instantiates a new WhatsappFlowValidationErrorPointersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappFlowValidationErrorPointersInnerWithDefaults() *WhatsappFlowValidationErrorPointersInner {
	this := WhatsappFlowValidationErrorPointersInner{}
	return &this
}

// GetLineStart returns the LineStart field value if set, zero value otherwise.
func (o *WhatsappFlowValidationErrorPointersInner) GetLineStart() int32 {
	if o == nil || o.LineStart == nil {
		var ret int32
		return ret
	}
	return *o.LineStart
}

// GetLineStartOk returns a tuple with the LineStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowValidationErrorPointersInner) GetLineStartOk() (*int32, bool) {
	if o == nil || o.LineStart == nil {
		return nil, false
	}
	return o.LineStart, true
}

// HasLineStart returns a boolean if a field has been set.
func (o *WhatsappFlowValidationErrorPointersInner) HasLineStart() bool {
	if o != nil && o.LineStart != nil {
		return true
	}

	return false
}

// SetLineStart gets a reference to the given int32 and assigns it to the LineStart field.
func (o *WhatsappFlowValidationErrorPointersInner) SetLineStart(v int32) {
	o.LineStart = &v
}

// GetLineEnd returns the LineEnd field value if set, zero value otherwise.
func (o *WhatsappFlowValidationErrorPointersInner) GetLineEnd() int32 {
	if o == nil || o.LineEnd == nil {
		var ret int32
		return ret
	}
	return *o.LineEnd
}

// GetLineEndOk returns a tuple with the LineEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowValidationErrorPointersInner) GetLineEndOk() (*int32, bool) {
	if o == nil || o.LineEnd == nil {
		return nil, false
	}
	return o.LineEnd, true
}

// HasLineEnd returns a boolean if a field has been set.
func (o *WhatsappFlowValidationErrorPointersInner) HasLineEnd() bool {
	if o != nil && o.LineEnd != nil {
		return true
	}

	return false
}

// SetLineEnd gets a reference to the given int32 and assigns it to the LineEnd field.
func (o *WhatsappFlowValidationErrorPointersInner) SetLineEnd(v int32) {
	o.LineEnd = &v
}

// GetColumnStart returns the ColumnStart field value if set, zero value otherwise.
func (o *WhatsappFlowValidationErrorPointersInner) GetColumnStart() int32 {
	if o == nil || o.ColumnStart == nil {
		var ret int32
		return ret
	}
	return *o.ColumnStart
}

// GetColumnStartOk returns a tuple with the ColumnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowValidationErrorPointersInner) GetColumnStartOk() (*int32, bool) {
	if o == nil || o.ColumnStart == nil {
		return nil, false
	}
	return o.ColumnStart, true
}

// HasColumnStart returns a boolean if a field has been set.
func (o *WhatsappFlowValidationErrorPointersInner) HasColumnStart() bool {
	if o != nil && o.ColumnStart != nil {
		return true
	}

	return false
}

// SetColumnStart gets a reference to the given int32 and assigns it to the ColumnStart field.
func (o *WhatsappFlowValidationErrorPointersInner) SetColumnStart(v int32) {
	o.ColumnStart = &v
}

// GetColumnEnd returns the ColumnEnd field value if set, zero value otherwise.
func (o *WhatsappFlowValidationErrorPointersInner) GetColumnEnd() int32 {
	if o == nil || o.ColumnEnd == nil {
		var ret int32
		return ret
	}
	return *o.ColumnEnd
}

// GetColumnEndOk returns a tuple with the ColumnEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowValidationErrorPointersInner) GetColumnEndOk() (*int32, bool) {
	if o == nil || o.ColumnEnd == nil {
		return nil, false
	}
	return o.ColumnEnd, true
}

// HasColumnEnd returns a boolean if a field has been set.
func (o *WhatsappFlowValidationErrorPointersInner) HasColumnEnd() bool {
	if o != nil && o.ColumnEnd != nil {
		return true
	}

	return false
}

// SetColumnEnd gets a reference to the given int32 and assigns it to the ColumnEnd field.
func (o *WhatsappFlowValidationErrorPointersInner) SetColumnEnd(v int32) {
	o.ColumnEnd = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *WhatsappFlowValidationErrorPointersInner) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappFlowValidationErrorPointersInner) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *WhatsappFlowValidationErrorPointersInner) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *WhatsappFlowValidationErrorPointersInner) SetPath(v string) {
	o.Path = &v
}

func (o WhatsappFlowValidationErrorPointersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LineStart != nil {
		toSerialize["lineStart"] = o.LineStart
	}
	if o.LineEnd != nil {
		toSerialize["lineEnd"] = o.LineEnd
	}
	if o.ColumnStart != nil {
		toSerialize["columnStart"] = o.ColumnStart
	}
	if o.ColumnEnd != nil {
		toSerialize["columnEnd"] = o.ColumnEnd
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappFlowValidationErrorPointersInner struct {
	value *WhatsappFlowValidationErrorPointersInner
	isSet bool
}

func (v NullableWhatsappFlowValidationErrorPointersInner) Get() *WhatsappFlowValidationErrorPointersInner {
	return v.value
}

func (v *NullableWhatsappFlowValidationErrorPointersInner) Set(val *WhatsappFlowValidationErrorPointersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappFlowValidationErrorPointersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappFlowValidationErrorPointersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappFlowValidationErrorPointersInner(val *WhatsappFlowValidationErrorPointersInner) *NullableWhatsappFlowValidationErrorPointersInner {
	return &NullableWhatsappFlowValidationErrorPointersInner{value: val, isSet: true}
}

func (v NullableWhatsappFlowValidationErrorPointersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappFlowValidationErrorPointersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


