/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// CustomEventDefinitionCreateRequest Contains the properties of the custom event definition to be created.
type CustomEventDefinitionCreateRequest struct {
	// The unique name of the custom event.
	Name string `json:"name"`
	// The label of the custom event.
	Label string `json:"label"`
	// The description of the event.
	Description *string `json:"description,omitempty"`
	// Type of the object that the event will be associated with. - `CONTACT`: Indicates that the object is a `contact`.
	ObjectType string `json:"objectType"`
	// A list of property definitions for the event.
	Properties []CustomEventDefinitionPropertyCreateRequest `json:"properties,omitempty"`
}

// NewCustomEventDefinitionCreateRequest instantiates a new CustomEventDefinitionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEventDefinitionCreateRequest(name string, label string, objectType string) *CustomEventDefinitionCreateRequest {
	this := CustomEventDefinitionCreateRequest{}
	this.Name = name
	this.Label = label
	this.ObjectType = objectType
	return &this
}

// NewCustomEventDefinitionCreateRequestWithDefaults instantiates a new CustomEventDefinitionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEventDefinitionCreateRequestWithDefaults() *CustomEventDefinitionCreateRequest {
	this := CustomEventDefinitionCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CustomEventDefinitionCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomEventDefinitionCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomEventDefinitionCreateRequest) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value
func (o *CustomEventDefinitionCreateRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CustomEventDefinitionCreateRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CustomEventDefinitionCreateRequest) SetLabel(v string) {
	o.Label = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomEventDefinitionCreateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEventDefinitionCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomEventDefinitionCreateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomEventDefinitionCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetObjectType returns the ObjectType field value
func (o *CustomEventDefinitionCreateRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *CustomEventDefinitionCreateRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *CustomEventDefinitionCreateRequest) SetObjectType(v string) {
	o.ObjectType = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CustomEventDefinitionCreateRequest) GetProperties() []CustomEventDefinitionPropertyCreateRequest {
	if o == nil || o.Properties == nil {
		var ret []CustomEventDefinitionPropertyCreateRequest
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEventDefinitionCreateRequest) GetPropertiesOk() ([]CustomEventDefinitionPropertyCreateRequest, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CustomEventDefinitionCreateRequest) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []CustomEventDefinitionPropertyCreateRequest and assigns it to the Properties field.
func (o *CustomEventDefinitionCreateRequest) SetProperties(v []CustomEventDefinitionPropertyCreateRequest) {
	o.Properties = v
}

func (o CustomEventDefinitionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableCustomEventDefinitionCreateRequest struct {
	value *CustomEventDefinitionCreateRequest
	isSet bool
}

func (v NullableCustomEventDefinitionCreateRequest) Get() *CustomEventDefinitionCreateRequest {
	return v.value
}

func (v *NullableCustomEventDefinitionCreateRequest) Set(val *CustomEventDefinitionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEventDefinitionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEventDefinitionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEventDefinitionCreateRequest(val *CustomEventDefinitionCreateRequest) *NullableCustomEventDefinitionCreateRequest {
	return &NullableCustomEventDefinitionCreateRequest{value: val, isSet: true}
}

func (v NullableCustomEventDefinitionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEventDefinitionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


