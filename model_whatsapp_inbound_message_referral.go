/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageReferral When a user messages businesses using call-to-actions buttons on [Ads that Click to WhatsApp](https://www.facebook.com/business/help/447934475640650) or a [Facebook Page call-to-action buttons](https://www.facebook.com/help/977869848936797), this field is included as an attachment.
type WhatsappInboundMessageReferral struct {
	// Specifies the URL that leads to the ad or post clicked by the user. Opening this URL takes you to the ad viewed by your user.
	SourceUrl *string `json:"source_url,omitempty"`
	// Specifies the type of the ad's source. Supported values are \"ad\" or \"post\".
	SourceType *string `json:"source_type,omitempty"`
	// Specifies the Meta ID for an ad or post.
	SourceId *string `json:"source_id,omitempty"`
	// Specifies the headline used in the ad or post that generated the message.
	Headline *string `json:"headline,omitempty"`
	// The description, or body, from the ad or post that generated the message.
	Body *string `json:"body,omitempty"`
	// Media present in the ad or post the user clicked. Supported values are \"image\" or \"video\".
	MediaType *string `json:"media_type,omitempty"`
	// **Added if media_type is \"image\".**  Contains a URL to the raw image.
	ImageUrl *string `json:"image_url,omitempty"`
	// **Added if media_type is \"video\".**  Contains a URL to the video.
	VideoUrl *string `json:"video_url,omitempty"`
	// **Added if media_type is \"video\".**  Contains a URL to the thumbnail image of the clicked video.
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	// Click ID generated by Meta for ads that click to WhatsApp.
	CtwaClid *string `json:"ctwa_clid,omitempty"`
}

// NewWhatsappInboundMessageReferral instantiates a new WhatsappInboundMessageReferral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageReferral() *WhatsappInboundMessageReferral {
	this := WhatsappInboundMessageReferral{}
	return &this
}

// NewWhatsappInboundMessageReferralWithDefaults instantiates a new WhatsappInboundMessageReferral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageReferralWithDefaults() *WhatsappInboundMessageReferral {
	this := WhatsappInboundMessageReferral{}
	return &this
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetSourceUrl() string {
	if o == nil || o.SourceUrl == nil {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetSourceUrlOk() (*string, bool) {
	if o == nil || o.SourceUrl == nil {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasSourceUrl() bool {
	if o != nil && o.SourceUrl != nil {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *WhatsappInboundMessageReferral) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *WhatsappInboundMessageReferral) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *WhatsappInboundMessageReferral) SetSourceId(v string) {
	o.SourceId = &v
}

// GetHeadline returns the Headline field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetHeadline() string {
	if o == nil || o.Headline == nil {
		var ret string
		return ret
	}
	return *o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetHeadlineOk() (*string, bool) {
	if o == nil || o.Headline == nil {
		return nil, false
	}
	return o.Headline, true
}

// HasHeadline returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasHeadline() bool {
	if o != nil && o.Headline != nil {
		return true
	}

	return false
}

// SetHeadline gets a reference to the given string and assigns it to the Headline field.
func (o *WhatsappInboundMessageReferral) SetHeadline(v string) {
	o.Headline = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *WhatsappInboundMessageReferral) SetBody(v string) {
	o.Body = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetMediaType() string {
	if o == nil || o.MediaType == nil {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetMediaTypeOk() (*string, bool) {
	if o == nil || o.MediaType == nil {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasMediaType() bool {
	if o != nil && o.MediaType != nil {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *WhatsappInboundMessageReferral) SetMediaType(v string) {
	o.MediaType = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *WhatsappInboundMessageReferral) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetVideoUrl returns the VideoUrl field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetVideoUrl() string {
	if o == nil || o.VideoUrl == nil {
		var ret string
		return ret
	}
	return *o.VideoUrl
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetVideoUrlOk() (*string, bool) {
	if o == nil || o.VideoUrl == nil {
		return nil, false
	}
	return o.VideoUrl, true
}

// HasVideoUrl returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasVideoUrl() bool {
	if o != nil && o.VideoUrl != nil {
		return true
	}

	return false
}

// SetVideoUrl gets a reference to the given string and assigns it to the VideoUrl field.
func (o *WhatsappInboundMessageReferral) SetVideoUrl(v string) {
	o.VideoUrl = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || o.ThumbnailUrl == nil {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl != nil {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *WhatsappInboundMessageReferral) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetCtwaClid returns the CtwaClid field value if set, zero value otherwise.
func (o *WhatsappInboundMessageReferral) GetCtwaClid() string {
	if o == nil || o.CtwaClid == nil {
		var ret string
		return ret
	}
	return *o.CtwaClid
}

// GetCtwaClidOk returns a tuple with the CtwaClid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageReferral) GetCtwaClidOk() (*string, bool) {
	if o == nil || o.CtwaClid == nil {
		return nil, false
	}
	return o.CtwaClid, true
}

// HasCtwaClid returns a boolean if a field has been set.
func (o *WhatsappInboundMessageReferral) HasCtwaClid() bool {
	if o != nil && o.CtwaClid != nil {
		return true
	}

	return false
}

// SetCtwaClid gets a reference to the given string and assigns it to the CtwaClid field.
func (o *WhatsappInboundMessageReferral) SetCtwaClid(v string) {
	o.CtwaClid = &v
}

func (o WhatsappInboundMessageReferral) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceUrl != nil {
		toSerialize["source_url"] = o.SourceUrl
	}
	if o.SourceType != nil {
		toSerialize["source_type"] = o.SourceType
	}
	if o.SourceId != nil {
		toSerialize["source_id"] = o.SourceId
	}
	if o.Headline != nil {
		toSerialize["headline"] = o.Headline
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.MediaType != nil {
		toSerialize["media_type"] = o.MediaType
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.VideoUrl != nil {
		toSerialize["video_url"] = o.VideoUrl
	}
	if o.ThumbnailUrl != nil {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if o.CtwaClid != nil {
		toSerialize["ctwa_clid"] = o.CtwaClid
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageReferral struct {
	value *WhatsappInboundMessageReferral
	isSet bool
}

func (v NullableWhatsappInboundMessageReferral) Get() *WhatsappInboundMessageReferral {
	return v.value
}

func (v *NullableWhatsappInboundMessageReferral) Set(val *WhatsappInboundMessageReferral) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageReferral) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageReferral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageReferral(val *WhatsappInboundMessageReferral) *NullableWhatsappInboundMessageReferral {
	return &NullableWhatsappInboundMessageReferral{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageReferral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageReferral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


