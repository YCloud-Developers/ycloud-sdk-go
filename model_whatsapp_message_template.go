/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageTemplate Use for sending a WhatsApp `template` message.
type WhatsappMessageTemplate struct {
	// Name of the template.
	Name     string                          `json:"name"`
	Language WhatsappMessageTemplateLanguage `json:"language"`
	// **Required when the specified template contains variables or media.** Array of component objects containing the parameters of the message.
	Components []WhatsappMessageTemplateComponent `json:"components,omitempty"`
}

// NewWhatsappMessageTemplate instantiates a new WhatsappMessageTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageTemplate(name string, language WhatsappMessageTemplateLanguage) *WhatsappMessageTemplate {
	this := WhatsappMessageTemplate{}
	this.Name = name
	this.Language = language
	return &this
}

// NewWhatsappMessageTemplateWithDefaults instantiates a new WhatsappMessageTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageTemplateWithDefaults() *WhatsappMessageTemplate {
	this := WhatsappMessageTemplate{}
	return &this
}

// GetName returns the Name field value
func (o *WhatsappMessageTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WhatsappMessageTemplate) SetName(v string) {
	o.Name = v
}

// GetLanguage returns the Language field value
func (o *WhatsappMessageTemplate) GetLanguage() WhatsappMessageTemplateLanguage {
	if o == nil {
		var ret WhatsappMessageTemplateLanguage
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageTemplate) GetLanguageOk() (*WhatsappMessageTemplateLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *WhatsappMessageTemplate) SetLanguage(v WhatsappMessageTemplateLanguage) {
	o.Language = v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *WhatsappMessageTemplate) GetComponents() []WhatsappMessageTemplateComponent {
	if o == nil || o.Components == nil {
		var ret []WhatsappMessageTemplateComponent
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageTemplate) GetComponentsOk() ([]WhatsappMessageTemplateComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *WhatsappMessageTemplate) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []WhatsappMessageTemplateComponent and assigns it to the Components field.
func (o *WhatsappMessageTemplate) SetComponents(v []WhatsappMessageTemplateComponent) {
	o.Components = v
}

func (o WhatsappMessageTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["language"] = o.Language
	}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageTemplate struct {
	value *WhatsappMessageTemplate
	isSet bool
}

func (v NullableWhatsappMessageTemplate) Get() *WhatsappMessageTemplate {
	return v.value
}

func (v *NullableWhatsappMessageTemplate) Set(val *WhatsappMessageTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageTemplate(val *WhatsappMessageTemplate) *NullableWhatsappMessageTemplate {
	return &NullableWhatsappMessageTemplate{value: val, isSet: true}
}

func (v NullableWhatsappMessageTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
