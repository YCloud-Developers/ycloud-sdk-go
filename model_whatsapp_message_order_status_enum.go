/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappMessageOrderStatusEnum Only supported value in the `order_details` message is `pending`. In an `order_status` message, `status` can be: `pending`, `processing`, `partially_shipped`, `shipped`, `completed`, or `canceled`.
type WhatsappMessageOrderStatusEnum string

// List of WhatsappMessageOrderStatusEnum
const (
	WHATSAPPMESSAGEORDERSTATUSENUM_PENDING WhatsappMessageOrderStatusEnum = "pending"
	WHATSAPPMESSAGEORDERSTATUSENUM_PROCESSING WhatsappMessageOrderStatusEnum = "processing"
	WHATSAPPMESSAGEORDERSTATUSENUM_PARTIALLY_SHIPPED WhatsappMessageOrderStatusEnum = "partially_shipped"
	WHATSAPPMESSAGEORDERSTATUSENUM_SHIPPED WhatsappMessageOrderStatusEnum = "shipped"
	WHATSAPPMESSAGEORDERSTATUSENUM_COMPLETED WhatsappMessageOrderStatusEnum = "completed"
	WHATSAPPMESSAGEORDERSTATUSENUM_CANCELED WhatsappMessageOrderStatusEnum = "canceled"
)

// All allowed values of WhatsappMessageOrderStatusEnum enum
var AllowedWhatsappMessageOrderStatusEnumEnumValues = []WhatsappMessageOrderStatusEnum{
	"pending",
	"processing",
	"partially_shipped",
	"shipped",
	"completed",
	"canceled",
}

func (v *WhatsappMessageOrderStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappMessageOrderStatusEnum(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappMessageOrderStatusEnumFromValue returns a pointer to a valid WhatsappMessageOrderStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappMessageOrderStatusEnumFromValue(v string) (*WhatsappMessageOrderStatusEnum, error) {
	ev := WhatsappMessageOrderStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappMessageOrderStatusEnum: valid values are %v", v, AllowedWhatsappMessageOrderStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappMessageOrderStatusEnum) IsValid() bool {
	for _, existing := range AllowedWhatsappMessageOrderStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappMessageOrderStatusEnum value
func (v WhatsappMessageOrderStatusEnum) Ptr() *WhatsappMessageOrderStatusEnum {
	return &v
}

type NullableWhatsappMessageOrderStatusEnum struct {
	value *WhatsappMessageOrderStatusEnum
	isSet bool
}

func (v NullableWhatsappMessageOrderStatusEnum) Get() *WhatsappMessageOrderStatusEnum {
	return v.value
}

func (v *NullableWhatsappMessageOrderStatusEnum) Set(val *WhatsappMessageOrderStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageOrderStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageOrderStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageOrderStatusEnum(val *WhatsappMessageOrderStatusEnum) *NullableWhatsappMessageOrderStatusEnum {
	return &NullableWhatsappMessageOrderStatusEnum{value: val, isSet: true}
}

func (v NullableWhatsappMessageOrderStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageOrderStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

